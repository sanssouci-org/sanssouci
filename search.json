[{"path":"https://sanssouci-org.github.io/sanssouci/articles/CopyOfconfidenceCurves_localized.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Confidence curves for structured hypotheses","text":"goal vignette illustrate post hoc bounds number true/false positives proposed Durand et al. (2020) localized signals. specifically, reproduce one plots Figure 12 Durand et al. (2020) using R package sanssouci. explicitly quote Durand et al. (2020) relevant.","code":"library(\"sanssouci\")"},{"path":"https://sanssouci-org.github.io/sanssouci/articles/CopyOfconfidenceCurves_localized.html","id":"objective","dir":"Articles","previous_headings":"","what":"Objective","title":"Confidence curves for structured hypotheses","text":"consider \\(m\\) null ordered hypotheses partitioned intervals size \\(s\\). simplicity set number intervals power 2: \\(m = s 2^q\\) integer \\(q\\): Therefore, \\(m = 1.28\\times 10^{4}\\). goal compare three post hoc bounds. bounds obtained interpolation reference family amount signal estimated probabilistic inequalities, following general principle laid Blanchard, Neuvial, Roquain (2020), differ choice reference family: “Simes”: bound derived Simes (1986) inequality proposed Goeman Solari (2011) studied Blanchard, Neuvial, Roquain (2020). bound introduced context signal localized. “Tree” “Partition”: two bounds derived DKWM inequality (Dvoretzky, Kiefer, Wolfowitz (1956), Massart (1990)), proposed Durand et al. (2020). “Partition” bound, reference family original partition \\((P_k)_k\\) \\(m\\) null hypotheses \\(K=2^q\\) intervals. “Tree” bound, reference family perfect binary tree whose leaves elements original partition.","code":"s <- 100 q <- 7 m <- s*2^q"},{"path":"https://sanssouci-org.github.io/sanssouci/articles/CopyOfconfidenceCurves_localized.html","id":"settings","dir":"Articles","previous_headings":"","what":"Settings","title":"Confidence curves for structured hypotheses","text":"define following numerical parameters, characterize true/false null hypothesis configuration considered Section 5 Durand et al. (2020): precisely, quoting Durand et al. (2020): false null hypotheses contained \\(P_k\\) \\(1 \\leq k \\leq K_1\\), fixed value \\(K_1\\). quantity \\(r\\) defined similarly (20), fraction false null hypotheses \\(P_k\\), set \\(r =0.9\\). partition pieces contain true null hypotheses. start creating binary tree structure generating signal: construction illustrated figure (Figure 11 Durand et al. (2020)) case \\(q=3\\). Figure 11 Durand et al. generate \\(p\\)-values according simulation setup Durand et al. (2020): true null \\(p\\)-values distributed ..d. \\(\\mathcal{N}(0,1)\\), false null \\(p\\)-values distributed ..d. \\(\\mathcal{N}(\\bar{\\mu}, 1)\\), [\\(\\bar{\\mu}= 3\\)].","code":"K1 <- 8 r <- 0.9 m1 <-  r*K1*s barmu <- 3 family <- dyadic.from.window.size(m, s = s, method = 2) mu <- gen.mu.leaves(m = m, K1 = K1, d = r, grouped = TRUE, setting = \"const\",                      barmu = barmu, leaf_list = family$leaf_list) pvalues <- gen.p.values(m = m, mu = mu, rho = 0, alternative = \"greater\")"},{"path":"https://sanssouci-org.github.io/sanssouci/articles/CopyOfconfidenceCurves_localized.html","id":"calculate-confidence-curves","dir":"Articles","previous_headings":"","what":"Calculate confidence curves","title":"Confidence curves for structured hypotheses","text":"confidence level post hoc inference set \\(\\alpha = 0.05\\). , considering confidence curves form \\((k, V(S_k))_{1 \\leq k \\leq m}\\), \\(S_k\\) set \\(k\\) smallest \\(p\\)-values (regardless ordering given partition). Note focusing sets priori favorable Simes bound, elements reference family among \\(S_k\\).","code":"alpha <- 0.05 ord <- order(pvalues) res <- list() x <- 1:m stat <- rep(\"FP\", m)"},{"path":"https://sanssouci-org.github.io/sanssouci/articles/CopyOfconfidenceCurves_localized.html","id":"true-number-of-false-positives","dir":"Articles","previous_headings":"Calculate confidence curves","what":"1- True number of false positives","title":"Confidence curves for structured hypotheses","text":"true number false positives called “Oracle” bound plots .","code":"label <- rep(\"Oracle\", m) method <- rep(\"Oracle\", m) oracle_bound <- cumsum(mu[ord] == 0) res[[\"Oracle\"]] <- data.frame(x = x, label = label, stat = stat, bound = oracle_bound, method = method)"},{"path":"https://sanssouci-org.github.io/sanssouci/articles/CopyOfconfidenceCurves_localized.html","id":"simes-based-confidence-curve","dir":"Articles","previous_headings":"Calculate confidence curves","what":"2- Simes-based confidence curve","title":"Confidence curves for structured hypotheses","text":"use Simes (1986) inequality bound number false positives node tree, proposed Goeman Solari (2011) studied Blanchard, Neuvial, Roquain (2020), context signal localized.","code":"simes_bound <- curveMaxFP(pvalues, alpha * 1:m / m) label <- rep(\"Simes\", m) method <- rep(\"Simes\", m) res[[\"Simes\"]] <- data.frame(x = x, label = label, stat = stat, bound = simes_bound, method = method)"},{"path":"https://sanssouci-org.github.io/sanssouci/articles/CopyOfconfidenceCurves_localized.html","id":"dkwm-based-confidence-curve","dir":"Articles","previous_headings":"Calculate confidence curves","what":"3- DKWM-based confidence curve","title":"Confidence curves for structured hypotheses","text":"use DKWM inequality (Dvoretzky, Kiefer, Wolfowitz (1956), Massart (1990)) bound number false positives node tree, suggested Durand et al. (2020).","code":"label <- rep(\"DKWM(tree)\", m) method <- rep(\"Tree\", m) C_tree <- family$C[8] ZL_tree <- zetas.tree(C_tree, family$leaf_list, zeta.DKWM, pvalues, alpha) tree_bound <- curve.V.star.forest.fast(ord, C_tree, ZL_tree, family$leaf_list, pruning = TRUE) res[[\"Tree\"]] <- data.frame(x = x, label = label, stat = stat, bound = tree_bound, method = method) label <- rep(\"DKWM(partition)\", m) method <- rep(\"Partition\", m) ZL_part <- zetas.tree(family$C, family$leaf_list, zeta.DKWM, pvalues, alpha) part_bound <- curve.V.star.forest.fast(ord, family$C, ZL_part, family$leaf_list, pruning = TRUE) res[[\"Partition\"]] <- data.frame(x = x, label = label, stat = stat, bound = part_bound, method = method)"},{"path":"https://sanssouci-org.github.io/sanssouci/articles/CopyOfconfidenceCurves_localized.html","id":"plot-confidence-curves","dir":"Articles","previous_headings":"","what":"Plot confidence curves","title":"Confidence curves for structured hypotheses","text":"","code":"library(\"ggplot2\") dat <- Reduce(rbind, res) lvls <- c(\"Oracle\", \"Partition\", \"Simes\", \"Tree\", \"Hybrid\") cols <- RColorBrewer::brewer.pal(length(lvls), \"Set1\") names(cols) <- lvls"},{"path":"https://sanssouci-org.github.io/sanssouci/articles/CopyOfconfidenceCurves_localized.html","id":"upper-bound-on-the-number-of-false-positives","dir":"Articles","previous_headings":"Plot confidence curves","what":"Upper bound on the number of false positives","title":"Confidence curves for structured hypotheses","text":"“Tree” “Partition” bounds sharper “Simes” bound soon considering “large” sets hypotheses. fact “Tree” “Partition” bounds sharp “Simes” bound first hundred hypotheses can explained choice ordering null hypotheses sets \\(S_k\\), discussed favorable “Simes” bound. Zooming first 720 null hypotheses (order \\(p\\)-values):","code":"xymax <- m1; pV <- ggplot(dat, aes(x, bound, colour = method)) +      geom_line() +     ylab(\"Upper bound on the number of false positives\") +     xlab(\"sorted hypotheses\") +     scale_colour_manual(values = cols) pV pV + coord_cartesian(xlim = c(1, xymax),                      ylim = c(0, xymax))"},{"path":"https://sanssouci-org.github.io/sanssouci/articles/CopyOfconfidenceCurves_localized.html","id":"lower-bound-on-the-number-of-true-positives","dir":"Articles","previous_headings":"","what":"Lower bound on the number of true positives","title":"Confidence curves for structured hypotheses","text":"information can displayed lower bound number true positives, defined \\(S \\subset \\{1 \\dots m\\}\\) \\(|S| - V(S)\\):  Zooming first 720 null hypotheses (order \\(p\\)-values), recover middle plot Figure 12 Durand et al. (2020).","code":"dat$S <- dat$x - dat$bound xmax <- m1; ymax <- max(dat$S[m1]); pS <- ggplot(dat, aes(x, S, colour = method)) +      geom_line() +     ylab(\"Lower bound on the number of true positives\") +     xlab(\"sorted hypotheses\") +     scale_colour_manual(values = cols) pS pS + xlim(1, xmax) + ylim(0, ymax)"},{"path":"https://sanssouci-org.github.io/sanssouci/articles/CopyOfconfidenceCurves_localized.html","id":"session-information","dir":"Articles","previous_headings":"","what":"Session information","title":"Confidence curves for structured hypotheses","text":"","code":"sessionInfo() ## R version 4.4.1 (2024-06-14) ## Platform: x86_64-pc-linux-gnu ## Running under: Ubuntu 22.04.4 LTS ##  ## Matrix products: default ## BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  ## LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 ##  ## locale: ##  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        ##  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    ##  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           ## [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    ##  ## time zone: UTC ## tzcode source: system (glibc) ##  ## attached base packages: ## [1] stats     graphics  grDevices utils     datasets  methods   base      ##  ## other attached packages: ## [1] ggplot2_3.5.1    sanssouci_0.13.0 ##  ## loaded via a namespace (and not attached): ##  [1] Matrix_1.7-0       gtable_0.3.5       jsonlite_1.8.8     compiler_4.4.1     ##  [5] highr_0.11         Rcpp_1.0.12        jquerylib_0.1.4    systemfonts_1.1.0  ##  [9] scales_1.3.0       textshaping_0.4.0  yaml_2.3.8         fastmap_1.2.0      ## [13] lattice_0.22-6     R6_2.5.1           labeling_0.4.3     generics_0.1.3     ## [17] knitr_1.47         tibble_3.2.1       desc_1.4.3         munsell_0.5.1      ## [21] RColorBrewer_1.1-3 pillar_1.9.0       bslib_0.7.0        rlang_1.1.4        ## [25] utf8_1.2.4         cachem_1.1.0       xfun_0.45          fs_1.6.4           ## [29] sass_0.4.9         memoise_2.0.1      cli_3.6.3          withr_3.0.0        ## [33] pkgdown_2.0.9      magrittr_2.0.3     matrixTests_0.2.3  digest_0.6.35      ## [37] grid_4.4.1         lifecycle_1.0.4    vctrs_0.6.5        evaluate_0.24.0    ## [41] glue_1.7.0         farver_2.1.2       ragg_1.3.2         fansi_1.0.6        ## [45] colorspace_2.1-0   rmarkdown_2.27     purrr_1.0.2        pkgconfig_2.0.3    ## [49] matrixStats_1.3.0  tools_4.4.1        htmltools_0.5.8.1"},{"path":[]},{"path":"https://sanssouci-org.github.io/sanssouci/articles/IIDEA.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"IIDEA: Interactive Inference for Differential Expression Analyses","text":"vignette provides guidelines using IIDEA shiny application. context differential gene expression studies, interactive application combines volcano plots enrichment analyses. main distinctive feature app makes possible users interactively select genes interest (either volcano plot corresponding particular gene set) obtain valid statistical guarantees regarding number true/false positives among genes (see Methods section ).","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/articles/IIDEA.html","id":"quick-start","dir":"Articles","previous_headings":"","what":"Quick start","title":"IIDEA: Interactive Inference for Differential Expression Analyses","text":"Open IIDEA shiny application Click ‘Run!’ launches analysis example data set (described ): volcano plot displayed right panel, together table bottom left panel.","code":""},{"path":[]},{"path":"https://sanssouci-org.github.io/sanssouci/articles/IIDEA.html","id":"default-output","dir":"Articles","previous_headings":"Interactive statistical guarantees","what":"Default output","title":"IIDEA: Interactive Inference for Differential Expression Analyses","text":"table displays, user selection set genes, following statistical guarantees: TP\\(\\geq\\): least 57 truly differentially expressed genes (True Positives, TP) among 70 genes selected volcano plot. FDP\\(\\leq\\): proportion genes erroneously called differentially expressed among selected (False Discovery Proportion, FDP) less 19%.","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/articles/IIDEA.html","id":"user-selections","dir":"Articles","previous_headings":"Interactive statistical guarantees","what":"User selections","title":"IIDEA: Interactive Inference for Differential Expression Analyses","text":"Select set genes interest dragging dropping horizonal vertical bars, making rectangular “lasso” selection. table updated selection. Clicking line corresponding gene selection highlights corresponding genes volcano plot. Clicking name gene selection table opens new window corresponding set genes displayed StringDB. User selections post hoc bounds can downloaded CSV files.","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/articles/IIDEA.html","id":"enrichment-analyses","dir":"Articles","previous_headings":"","what":"Enrichment analyses","title":"IIDEA: Interactive Inference for Differential Expression Analyses","text":"Click ‘Gene sets’ tab left panel: table bottom left panel now displays statistical guarantees obtained post hoc bounds list GO terms (corresponding Biological Process ontology example ). Clicking line corresponding GO term highlights corresponding genes volcano plot (see next Figure). Clicking GO term opens associated QuickGO page (Binns et al. (2009)), e.g. https://www.ebi.ac.uk/QuickGO/term/GO:0002576. Post hoc bounds can downloaded CSV file. default, available gene sets listed. noted Ebrahimpoor et al. (2020), post hoc inference makes possible perform enrichment analyses “self-contained” “competitive” hypotheses. Quoting Ebrahimpoor et al. (2020): “Methods testing competitive null test whether features feature set interest often active features outside feature set. Methods testing self-contained null test whether active features feature set interest.” approaches readily avialable via drop-menu, makes possible filter gene sets significant according “self-contained” “competitive” null hypotheses. example, Leukemia data set, GO term Platelet degranulation (GO:0002576) significant competitive self-contained null hypotheses. GO term highlighted next plot, obtained clicking associated line gene set table.","code":""},{"path":[]},{"path":[]},{"path":"https://sanssouci-org.github.io/sanssouci/articles/IIDEA.html","id":"leukemia-data-set","dir":"Articles","previous_headings":"Data > Public data","what":"Leukemia data set","title":"IIDEA: Interactive Inference for Differential Expression Analyses","text":"first data set available list public data sets Leukemia data set studied Bourgon, Gentleman, Huber (2010). data set consists gene expression measurements \\(n = 79\\) patients B-cell acute lymphoblastic leukemia () Chiaretti et al. (2005). patients classified two subgoups, depending whether harbor specific mutation called “BCR/ABL”. Welch \\(T\\)test equality group mean expression applied gene. data set available R package sanssouci.data, also studied differential expression vignette SansSouci package.","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/articles/IIDEA.html","id":"gseabenchmarker-data","dir":"Articles","previous_headings":"Data > Public data","what":"GSEAbenchmarkeR data","title":"IIDEA: Interactive Inference for Differential Expression Analyses","text":"Nine data sets GSEABenchmarkeR package also available. data sets contain gene expression measurements microarray experiments various diseases (several cancer types, Alzheimer’s disease). data sets can choosen analysis via ‘Choose gene data set’ dropdown menu. Thanks Bioconductor package EnrichmentBrowser, enrichement analysis gene sets based Gene Ontology gene sets (Biological Process) available.","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/articles/IIDEA.html","id":"user-data","dir":"Articles","previous_headings":"Data","what":"User data","title":"IIDEA: Interactive Inference for Differential Expression Analyses","text":"“Use public data” unchecked, users can upload gene expression data, optionally file containing gene sets interest (example obtained Gene Ontology).","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/articles/IIDEA.html","id":"gene-expression","dir":"Articles","previous_headings":"Data > User data","what":"Gene expression","title":"IIDEA: Interactive Inference for Differential Expression Analyses","text":"Gene expression data must two following formats (see also example data files can downloaded IIDEA): matrix containing gene expression data, form gene \\(\\times\\) condition matrix. first row matrix header containing category labels 0 1. first column contains unique gene identifier per row. One current limitation IIDEA case performs Welch \\(T\\) tests differential expression, suitable microarray data; matrix containing \\(p\\)-values fold changes gene. matrix can obtained standard differential expression method (e.g. DESeq2, edgeR, limma-voom). Gene expression data must stored csv file. first row must contain name columns. separator ‘,’. Nevertheless, ‘;’ ’ allowed. statistical perspective, important limitation \\(p\\)-values fold changes provided post hoc inference can performed using original post hoc bound Goeman Solari (2011), using powerful bounds Blanchard, Neuvial, Roquain (2020). Indeed, latter require full expression matrix available order use permutations obtain bounds adaptive dependence data set hand. important perspective IIDEA directly implement differential expression methods dedicated count data, powerful bounds Blanchard, Neuvial, Roquain (2020) can used.","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/articles/IIDEA.html","id":"gene-sets","dir":"Articles","previous_headings":"Data > User data","what":"Gene sets","title":"IIDEA: Interactive Inference for Differential Expression Analyses","text":"Gene set information must CSV file row gene column gene set. binary matrix specifying gene contained gene set. first row must header containing gene set names, must contain gene identifiers gene expression matrix. gene expression matrix mandatory obtain interactive volcano plots, uploading gene set matrix required gene set analyses. Sample input data files can downloaded example expected file structure. files correspond public data set Chiaretti et al. (2005).","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/articles/IIDEA.html","id":"running-the-app-on-a-local-computer","dir":"Articles","previous_headings":"","what":"Running the app on a local computer","title":"IIDEA: Interactive Inference for Differential Expression Analyses","text":"IIDEA deployed . login required, data sets uploaded users stored server side. source code R package contains source files IIDEA, available . allows users run IIDEA local machine deploy servers desired. ‘remotes’ package installed, IIDEA can run locally R session executing following commands: default, Leukemia data set available local installation. add nine public data sets, may run following code: code uses functions GSEABenchmarkeR package normalize store locally gene expression data sets corresponding gene annotation GO Biological Process. Please note may take several minutes run (needs run ).","code":"remotes::install_github(\"sanssouci-org/sanssouci\") shiny::runApp(system.file(\"shiny-examples/volcano-plot\", package = \"sanssouci\")) source(system.file(\"shiny-examples/volcano-plot/GSEABenchmarkeR/export-data.R\",                     package = \"sanssouci\"))"},{"path":"https://sanssouci-org.github.io/sanssouci/articles/IIDEA.html","id":"methods","dir":"Articles","previous_headings":"","what":"Methods","title":"IIDEA: Interactive Inference for Differential Expression Analyses","text":"IIDEA leverages post hoc inference methods implemented R package sanssouci. Post hoc inference recent field stemming multiple testing literature users allowed freely select hypotheses interest “seeing data”, without compromising statistical validity despite issue “cherry-picking” (Blanchard, Neuvial, Roquain (2021), Blanchard, Neuvial, Roquain (2020), Goeman Solari (2011)). methods implemented IIDEA allow valid inference without requiring assumptions dependence genes. Instead, dependencies estimated data using permutation techniques, making methods mathematically valid statistically powerful (see e.g. https://sanssouci-org.github.io/sanssouci/articles/post-hoc_differential-expression.html). parameters estimation step can customized clicking “Advanced parameters”.","code":""},{"path":[]},{"path":"https://sanssouci-org.github.io/sanssouci/articles/Simes_equi-correlation.html","id":"the-simes-inequality","dir":"Articles","previous_headings":"","what":"The Simes inequality","title":"Conservativeness of the Simes inequality under positive dependence","text":"Let \\(\\mathbf{q}=(q_i)_{1 \\leq \\leq m}\\) vector random variables : \\(=1 \\ldots m\\), \\(q_i \\sim \\mathcal{U}[0,1]\\) \\(\\mathbf{q}\\) satisfies positive regression dependency subset (PRDS) refer Sarkar (1998) formal definition form positive dependence. , simply note holds particular Gaussian equi-correlated random variables. , letting \\((q_{(1)}, \\ldots q_{(m)} )\\) corresponding order statistics, : \\[ \\mathbb{P} \\left( \\exists \\\\{1, \\ldots m\\} \\::\\: q_{()} \\leq \\frac{\\alpha }{m}\\right) \\leq \\alpha \\] inequality due Simes (1986). sharp independence \\(q_i\\) (, inequality equality). sharp positive dependence?","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/articles/Simes_equi-correlation.html","id":"estimating-the-size-of-the-simes-test","dir":"Articles","previous_headings":"","what":"Estimating the size of the Simes test","title":"Conservativeness of the Simes inequality under positive dependence","text":"write small function estimate size Simes test, , level actually achieved left-hand side inequality. simulation parameters set follows: : \\(1000\\) hypotheses equi-correlation level \\(0\\) \\(0.8\\) target level Simes test: \\(0.2\\) \\(1000\\) replications used estimate size test estimate size test average size \\(\\hat{\\alpha}\\) achieved across replications, corresponding standard error \\(\\sqrt{\\hat{\\alpha}(1-\\hat{\\alpha})/B}\\). table illustrates sharpness Simes test independence (\\(\\rho=0\\)), conservativeness test positive dependence (\\(\\rho>0\\)). example, \\(\\rho=0.4\\), size Simes test less half target level. conservativeness one motivations development post hoc inference methods use randomization adapt dependence. See following vignettes: Joint Error Rate Calibration Permutation-based post hoc inference differential gene expression studies Permutation-based post hoc inference fMRI studies","code":"library(\"sanssouci\") library(\"matrixStats\") library(\"knitr\") size <- function(rho, m, B, alpha=0.05) {     X0 <- gaussianTestStatistics(m, B, dep = \"equi\", param = rho)$X0     p0 <- pnorm(X0, lower.tail = FALSE)     thr <- t_linear(alpha, 1:m, m)     p0s <- sanssouci:::colSort(p0);     isAbove <- sweep(p0s, 1, thr,  \"<\")     nAbove <- colSums(isAbove)     mean(nAbove > 0) } m <- 1e3 rhos <- c(0, 0.1, 0.2, 0.4, 0.8) alpha <- 0.2 B <- 1000 ahat <- sapply(rhos, size, m, B, alpha=alpha) ses <- sqrt(ahat*(1-ahat)/B) tb <- rbind(ahat/alpha, ses/alpha) colnames(tb) <- rhos rownames(tb) <- c(\"Achieved level/target level\", \"Standard error\") knitr::kable(tb, digits = 2)"},{"path":"https://sanssouci-org.github.io/sanssouci/articles/Simes_equi-correlation.html","id":"session-information","dir":"Articles","previous_headings":"","what":"Session information","title":"Conservativeness of the Simes inequality under positive dependence","text":"","code":"sessionInfo() ## R version 4.4.1 (2024-06-14) ## Platform: x86_64-pc-linux-gnu ## Running under: Ubuntu 22.04.4 LTS ##  ## Matrix products: default ## BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  ## LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 ##  ## locale: ##  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        ##  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    ##  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           ## [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    ##  ## time zone: UTC ## tzcode source: system (glibc) ##  ## attached base packages: ## [1] stats     graphics  grDevices utils     datasets  methods   base      ##  ## other attached packages: ## [1] knitr_1.47        matrixStats_1.3.0 sanssouci_0.13.0  ##  ## loaded via a namespace (and not attached): ##  [1] vctrs_0.6.5       cli_3.6.3         rlang_1.1.4       xfun_0.45         ##  [5] purrr_1.0.2       generics_0.1.3    textshaping_0.4.0 jsonlite_1.8.8    ##  [9] htmltools_0.5.8.1 ragg_1.3.2        sass_0.4.9        rmarkdown_2.27    ## [13] grid_4.4.1        evaluate_0.24.0   jquerylib_0.1.4   fastmap_1.2.0     ## [17] matrixTests_0.2.3 yaml_2.3.8        lifecycle_1.0.4   memoise_2.0.1     ## [21] compiler_4.4.1    fs_1.6.4          Rcpp_1.0.12       lattice_0.22-6    ## [25] systemfonts_1.1.0 digest_0.6.35     R6_2.5.1          magrittr_2.0.3    ## [29] Matrix_1.7-0      bslib_0.7.0       tools_4.4.1       pkgdown_2.0.9     ## [33] cachem_1.1.0      desc_1.4.3"},{"path":[]},{"path":"https://sanssouci-org.github.io/sanssouci/articles/confidenceCurves_localized.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Confidence curves for structured hypotheses","text":"goal vignette illustrate post hoc bounds number true/false positives proposed Durand et al. (2020) localized signals. specifically, reproduce one plots Figure 12 Durand et al. (2020) using R package sanssouci. explicitly quote Durand et al. (2020) relevant.","code":"library(\"sanssouci\")"},{"path":"https://sanssouci-org.github.io/sanssouci/articles/confidenceCurves_localized.html","id":"objective","dir":"Articles","previous_headings":"","what":"Objective","title":"Confidence curves for structured hypotheses","text":"consider \\(m\\) null ordered hypotheses partitioned intervals size \\(s\\). simplicity set number intervals power 2: \\(m = s 2^q\\) integer \\(q\\): Therefore, \\(m = 1.28\\times 10^{4}\\).goal compare three post hoc bounds. bounds obtained interpolation reference family amount signal estimated probabilistic inequalities, following general principle laid Blanchard, Neuvial, Roquain (2020), differ choice reference family: “Simes”: bound derived Simes (1986) inequality proposed Goeman Solari (2011) studied Blanchard, Neuvial, Roquain (2020). bound introduced context signal localized. “Tree” “Partition”: two bounds derived DKWM inequality (Dvoretzky, Kiefer, Wolfowitz (1956), Massart (1990)), proposed Durand et al. (2020). “Partition” bound, reference family original partition \\((P_k)_k\\) \\(m\\) null hypotheses \\(K=2^q\\) intervals. “Tree” bound, reference family perfect binary tree whose leaves elements original partition.","code":"s <- 100 q <- 7 m <- s*2^q"},{"path":"https://sanssouci-org.github.io/sanssouci/articles/confidenceCurves_localized.html","id":"settings","dir":"Articles","previous_headings":"","what":"Settings","title":"Confidence curves for structured hypotheses","text":"define following numerical parameters, characterize true/false null hypothesis configuration considered Section 5 Durand et al. (2020): precisely, quoting Durand et al. (2020): false null hypotheses contained \\(P_k\\) \\(1 \\leq k \\leq K_1\\), fixed value \\(K_1\\). quantity \\(r\\) defined similarly (20), fraction false null hypotheses \\(P_k\\), set \\(r =0.9\\). partition pieces contain true null hypotheses. start creating binary tree structure generating signal: construction illustrated figure (Figure 11 Durand et al. (2020)) case \\(q=3\\). Figure 11 Durand et al. generate \\(p\\)-values according simulation setup Durand et al. (2020): true null \\(p\\)-values distributed ..d. \\(\\mathcal{N}(0,1)\\), false null \\(p\\)-values distributed ..d. \\(\\mathcal{N}(\\bar{\\mu}, 1)\\), [\\(\\bar{\\mu}= 3\\)].","code":"K1 <- 8 r <- 0.9 m1 <-  r*K1*s barmu <- 3 obj <- SansSouciDyadic(m, leaf_size = s, direction = \"top-down\") mu <- gen.mu.leaves(m = m, K1 = K1, d = r, grouped = TRUE, setting = \"const\",                      barmu = barmu, leaf_list = obj$input$leaves) pvalues <- gen.p.values(m = m, mu = mu, rho = 0, alternative = \"greater\")"},{"path":"https://sanssouci-org.github.io/sanssouci/articles/confidenceCurves_localized.html","id":"calculate-confidence-curves","dir":"Articles","previous_headings":"","what":"Calculate confidence curves","title":"Confidence curves for structured hypotheses","text":"confidence level post hoc inference set \\(\\alpha = 0.05\\). , considering confidence curves form \\((k, V(S_k))_{1 \\leq k \\leq m}\\), \\(S_k\\) set \\(k\\) smallest \\(p\\)-values (regardless ordering given partition). Note focusing sets priori favorable Simes bound, elements reference family among \\(S_k\\).","code":"alpha <- 0.05 ord <- order(pvalues) idxs <- seq_len(nHyp(obj)) res <- list()"},{"path":"https://sanssouci-org.github.io/sanssouci/articles/confidenceCurves_localized.html","id":"true-number-of-false-positives","dir":"Articles","previous_headings":"Calculate confidence curves","what":"1- True number of false positives","title":"Confidence curves for structured hypotheses","text":"true number false positives called “Oracle” bound plots .","code":"obj$input$truth <- as.numeric(mu != 0) res_Oracle <- fit(obj, alpha = alpha, p.values = pvalues, family = \"Oracle\") res[[\"Oracle\"]] <- predict(res_Oracle, what = \"FP\", all = TRUE) res[[\"Oracle\"]]$method <- \"Oracle\""},{"path":"https://sanssouci-org.github.io/sanssouci/articles/confidenceCurves_localized.html","id":"simes-based-confidence-curve","dir":"Articles","previous_headings":"Calculate confidence curves","what":"2- Simes-based confidence curve","title":"Confidence curves for structured hypotheses","text":"use Simes (1986) inequality bound number false positives node tree, proposed Goeman Solari (2011) studied Blanchard, Neuvial, Roquain (2020), context signal localized.","code":"res_Simes <- fit(obj, alpha = alpha, p.values = pvalues, family = \"Simes\") res[[\"Simes\"]] <- predict(res_Simes, what = \"FP\", all = TRUE) res[[\"Simes\"]]$method <- \"Simes\""},{"path":"https://sanssouci-org.github.io/sanssouci/articles/confidenceCurves_localized.html","id":"dkwm-based-confidence-curve","dir":"Articles","previous_headings":"Calculate confidence curves","what":"3- DKWM-based confidence curve","title":"Confidence curves for structured hypotheses","text":"use DKWM inequality (Dvoretzky, Kiefer, Wolfowitz (1956), Massart (1990)) bound number false positives node tree, suggested Durand et al. (2020).","code":"res_DKWM <- fit(obj, alpha, p.values = pvalues, family = \"DKWM\") res[[\"Tree\"]] <- predict(res_DKWM, what = \"FP\", n_out = 40) res[[\"Tree\"]]$method <- \"Tree\" res_DKWM_part <- fit(obj, alpha, p.values = pvalues,                  family = \"DKWM\", flavor = \"partition\") res[[\"Partition\"]] <- predict(res_DKWM_part, what = \"FP\", n_out = 40) res[[\"Partition\"]]$method <- \"Partition\""},{"path":"https://sanssouci-org.github.io/sanssouci/articles/confidenceCurves_localized.html","id":"plot-confidence-curves","dir":"Articles","previous_headings":"","what":"Plot confidence curves","title":"Confidence curves for structured hypotheses","text":"","code":"library(\"ggplot2\") dat <- Reduce(rbind, res) lvls <- c(\"Oracle\", \"Partition\", \"Simes\", \"Tree\", \"Hybrid\") cols <- RColorBrewer::brewer.pal(length(lvls), \"Set1\") names(cols) <- lvls"},{"path":"https://sanssouci-org.github.io/sanssouci/articles/confidenceCurves_localized.html","id":"upper-bound-on-the-number-of-false-positives","dir":"Articles","previous_headings":"Plot confidence curves","what":"Upper bound on the number of false positives","title":"Confidence curves for structured hypotheses","text":"“Tree” “Partition” bounds sharper “Simes” bound soon considering “large” sets hypotheses. fact “Tree” “Partition” bounds sharp “Simes” bound first hundred hypotheses can explained choice ordering null hypotheses sets \\(S_k\\), discussed favorable “Simes” bound. Zooming first 720 null hypotheses (order \\(p\\)-values):","code":"xymax <- m1; pV <- ggplot(dat, aes(x, bound, colour = method)) +      geom_line() +     ylab(\"Upper bound on the number of false positives\") +     xlab(\"sorted hypotheses\") +     scale_colour_manual(values = cols) pV pV + coord_cartesian(xlim = c(1, xymax),                      ylim = c(0, xymax))"},{"path":"https://sanssouci-org.github.io/sanssouci/articles/confidenceCurves_localized.html","id":"lower-bound-on-the-number-of-true-positives","dir":"Articles","previous_headings":"","what":"Lower bound on the number of true positives","title":"Confidence curves for structured hypotheses","text":"information can displayed lower bound number true positives, defined \\(S \\subset \\{1 \\dots m\\}\\) \\(|S| - V(S)\\):  Zooming first 720 null hypotheses (order \\(p\\)-values), recover middle plot Figure 12 Durand et al. (2020).","code":"dat$S <- dat$x - dat$bound xmax <- m1; ymax <- max(dat$S[m1]); pS <- ggplot(dat, aes(x, S, colour = method)) +      geom_line() +     ylab(\"Lower bound on the number of true positives\") +     xlab(\"sorted hypotheses\") +     scale_colour_manual(values = cols) pS pS + xlim(1, xmax) + ylim(0, ymax)"},{"path":"https://sanssouci-org.github.io/sanssouci/articles/confidenceCurves_localized.html","id":"session-information","dir":"Articles","previous_headings":"","what":"Session information","title":"Confidence curves for structured hypotheses","text":"","code":"sessionInfo() ## R version 4.4.1 (2024-06-14) ## Platform: x86_64-pc-linux-gnu ## Running under: Ubuntu 22.04.4 LTS ##  ## Matrix products: default ## BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  ## LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 ##  ## locale: ##  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        ##  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    ##  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           ## [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    ##  ## time zone: UTC ## tzcode source: system (glibc) ##  ## attached base packages: ## [1] stats     graphics  grDevices utils     datasets  methods   base      ##  ## other attached packages: ## [1] ggplot2_3.5.1    sanssouci_0.13.0 ##  ## loaded via a namespace (and not attached): ##  [1] Matrix_1.7-0       gtable_0.3.5       jsonlite_1.8.8     compiler_4.4.1     ##  [5] highr_0.11         Rcpp_1.0.12        jquerylib_0.1.4    systemfonts_1.1.0  ##  [9] scales_1.3.0       textshaping_0.4.0  yaml_2.3.8         fastmap_1.2.0      ## [13] lattice_0.22-6     R6_2.5.1           labeling_0.4.3     generics_0.1.3     ## [17] knitr_1.47         tibble_3.2.1       desc_1.4.3         munsell_0.5.1      ## [21] RColorBrewer_1.1-3 pillar_1.9.0       bslib_0.7.0        rlang_1.1.4        ## [25] utf8_1.2.4         cachem_1.1.0       xfun_0.45          fs_1.6.4           ## [29] sass_0.4.9         memoise_2.0.1      cli_3.6.3          withr_3.0.0        ## [33] pkgdown_2.0.9      magrittr_2.0.3     matrixTests_0.2.3  digest_0.6.35      ## [37] grid_4.4.1         lifecycle_1.0.4    vctrs_0.6.5        evaluate_0.24.0    ## [41] glue_1.7.0         farver_2.1.2       ragg_1.3.2         fansi_1.0.6        ## [45] colorspace_2.1-0   rmarkdown_2.27     purrr_1.0.2        pkgconfig_2.0.3    ## [49] matrixStats_1.3.0  tools_4.4.1        htmltools_0.5.8.1"},{"path":[]},{"path":[]},{"path":"https://sanssouci-org.github.io/sanssouci/articles/jointErrorRateCalibration_simulations.html","id":"simulation","dir":"Articles","previous_headings":"Two-sample tests","what":"Simulation","title":"Joint Error Rate calibration","text":"perform JER calibration using linear (Simes) template \\(\\mathfrak{R(\\lambda)}=(R_1(\\lambda),\\) \\(\\ldots,R_K(\\lambda)\\), \\(1 \\leq k \\leq K\\) \\[R_k(\\lambda) = \\left\\{\\\\{1, \\dots , m\\}\\::\\: \\bar{\\Phi}(Z_i) >  \\frac{\\lambda k}{m} \\right\\}\\,\\] \\(\\bar{\\Phi}\\) cdf \\(\\mathcal{N}(0,1)\\) distribution. Note \\(p_i = \\bar{\\Phi}(Z_i)\\) one-sided \\(p\\)-value associated test statistics \\(Z_i\\).","code":"obj <- SansSouciSim(m, rho, n, pi0, SNR = SNR, prob = 0.5) obj ## 'SansSouci' object: ##  Number of hypotheses:    500  ##  Number of observations:  30  ##  2-sample data ##  ## Truth:  ##   100 false null hypotheses (signals) out of 500 (pi0=0.8)"},{"path":"https://sanssouci-org.github.io/sanssouci/articles/jointErrorRateCalibration_simulations.html","id":"calibration","dir":"Articles","previous_headings":"Two-sample tests","what":"Calibration","title":"Joint Error Rate calibration","text":"output calibration following SansSouci object. particular: cal$input contains input simulated data (associated truth) cal$param contains calibration parameters p.values: \\(m\\) test statistics calculated permutation thr : JER-controlling family \\(K\\) (\\(K=m\\)) elements lambda: \\(\\lambda\\)-calibration parameter positive equi-correlation, expect \\(\\lambda > \\alpha\\) Simes family.","code":"B <- 1000 alpha <- 0.2 cal <- fit(obj, alpha = alpha, B = B, family = \"Simes\") cal ## 'SansSouci' object: ##  Number of hypotheses:    500  ##  Number of observations:  30  ##  2-sample data ##  ## Truth:  ##   100 false null hypotheses (signals) out of 500 (pi0=0.8) ## Parameters:  ##  Test function:      rowWelchTests ##  Number of permutations: B=1000 ##  Significance level: alpha=0.2 ##  Reference family:   Simes ##      (of size:   K=500) ##  ## Output: ##  Calibration parameter:  lambda=0.2051593 cal$output$lambda ##       20%  ## 0.2051593 cal$output$lambda > alpha ##  20%  ## TRUE"},{"path":"https://sanssouci-org.github.io/sanssouci/articles/jointErrorRateCalibration_simulations.html","id":"post-hoc-confidence-bounds","dir":"Articles","previous_headings":"Two-sample tests","what":"Post hoc confidence bounds","title":"Joint Error Rate calibration","text":"fitted SansSouci object contains post hoc confidence bounds: compare true number false positives among significant items, Simes bound without calibration","code":"env <- predict(cal, all = TRUE) head(env) ##   x label stat bound ## 1 1 Simes   TP     1 ## 2 2 Simes   TP     2 ## 3 3 Simes   TP     3 ## 4 4 Simes   TP     4 ## 5 5 Simes   TP     5 ## 6 6 Simes   TP     6 cal0 <- fit(obj, alpha = alpha, B = 0, family = \"Simes\") oracle <- fit(obj, alpha = alpha, family = \"Oracle\")  confs <- list(Simes = predict(cal0, all = TRUE),               \"Simes+calibration\" = predict(cal, all = TRUE),               \"Oracle\" = predict(oracle, all = TRUE)) plotConfCurve(confs, xmax = 200)"},{"path":"https://sanssouci-org.github.io/sanssouci/articles/jointErrorRateCalibration_simulations.html","id":"one-sample-tests","dir":"Articles","previous_headings":"","what":"One sample tests","title":"Joint Error Rate calibration","text":"code identical, except line generate observations (specify probability belonging one two populations using prob argument); moreover necessary specify vector categories ‘categ’ ‘calibrateJER’. expect \\(\\lambda > \\alpha\\).","code":"obj <- SansSouciSim(m, rho, n, pi0, SNR = SNR) obj ## 'SansSouci' object: ##  Number of hypotheses:    500  ##  Number of observations:  30  ##  1-sample data ##  ## Truth:  ##   100 false null hypotheses (signals) out of 500 (pi0=0.8) cal <- fit(obj, alpha = alpha, B = B, family = \"Simes\") cal ## 'SansSouci' object: ##  Number of hypotheses:    500  ##  Number of observations:  30  ##  1-sample data ##  ## Truth:  ##   100 false null hypotheses (signals) out of 500 (pi0=0.8) ## Parameters:  ##  Test function:      rowZTests ##  Number of permutations: B=1000 ##  Significance level: alpha=0.2 ##  Reference family:   Simes ##      (of size:   K=500) ##  ## Output: ##  Calibration parameter:  lambda=0.382704"},{"path":"https://sanssouci-org.github.io/sanssouci/articles/jointErrorRateCalibration_simulations.html","id":"confidence-curves","dir":"Articles","previous_headings":"One sample tests","what":"Confidence curves","title":"Joint Error Rate calibration","text":"associated confidence curves displayed :","code":"cal0 <- fit(obj, alpha = alpha, B = 0, family = \"Simes\") oracle <- fit(obj, alpha = alpha, family = \"Oracle\")  confs <- list(Simes = predict(cal0, all = TRUE),               \"Simes+calibration\" = predict(cal, all = TRUE),               \"Oracle\" = predict(oracle, all = TRUE)) plotConfCurve(confs)"},{"path":"https://sanssouci-org.github.io/sanssouci/articles/jointErrorRateCalibration_simulations.html","id":"session-information","dir":"Articles","previous_headings":"","what":"Session information","title":"Joint Error Rate calibration","text":"","code":"sessionInfo() ## R version 4.4.1 (2024-06-14) ## Platform: x86_64-pc-linux-gnu ## Running under: Ubuntu 22.04.4 LTS ##  ## Matrix products: default ## BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  ## LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 ##  ## locale: ##  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        ##  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    ##  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           ## [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    ##  ## time zone: UTC ## tzcode source: system (glibc) ##  ## attached base packages: ## [1] stats     graphics  grDevices utils     datasets  methods   base      ##  ## other attached packages: ## [1] ggplot2_3.5.1    sanssouci_0.13.0 ##  ## loaded via a namespace (and not attached): ##  [1] Matrix_1.7-0      gtable_0.3.5      jsonlite_1.8.8    highr_0.11        ##  [5] compiler_4.4.1    Rcpp_1.0.12       jquerylib_0.1.4   systemfonts_1.1.0 ##  [9] scales_1.3.0      textshaping_0.4.0 yaml_2.3.8        fastmap_1.2.0     ## [13] lattice_0.22-6    R6_2.5.1          labeling_0.4.3    generics_0.1.3    ## [17] knitr_1.47        tibble_3.2.1      desc_1.4.3        munsell_0.5.1     ## [21] bslib_0.7.0       pillar_1.9.0      rlang_1.1.4       utf8_1.2.4        ## [25] cachem_1.1.0      xfun_0.45         fs_1.6.4          sass_0.4.9        ## [29] memoise_2.0.1     cli_3.6.3         withr_3.0.0       pkgdown_2.0.9     ## [33] magrittr_2.0.3    matrixTests_0.2.3 digest_0.6.35     grid_4.4.1        ## [37] lifecycle_1.0.4   vctrs_0.6.5       evaluate_0.24.0   glue_1.7.0        ## [41] farver_2.1.2      ragg_1.3.2        fansi_1.0.6       colorspace_2.1-0  ## [45] rmarkdown_2.27    purrr_1.0.2       pkgconfig_2.0.3   matrixStats_1.3.0 ## [49] tools_4.4.1       htmltools_0.5.8.1"},{"path":"https://sanssouci-org.github.io/sanssouci/articles/post-hoc_differential-expression.html","id":"motivation-a-differential-gene-expression-study","dir":"Articles","previous_headings":"","what":"Motivation: a differential gene expression study","title":"Permutation-based post hoc inference for differential gene expression studies","text":"focus differential gene expression studies cancerology. studies aim identifying genes whose mean expression level differs significantly two () populations, based sample gene expression measurements individuals populations. Specifically, consider data set studied Bourgon, Gentleman, Huber (2010). data set consists gene expression measurements \\(n = 79\\) patients B-cell acute lymphoblastic leukemia () Chiaretti et al. (2005). patients classified two subgoups, depending whether harbor specific mutation called “BCR/ABL”: goal study understand molecular differences gene expression level populations BCR/ABL positive negative (“NEG”) patients. patient, observe vector \\(m = 9038\\) gene expression values. basic question ask : genes difference mean expression level mutated non-mutated population? question can addressed performing one statistical test difference means gene, define “differentially expressed” genes passing significance threshold. , Welch test differential expression applied gene. can done e.g. using sanssouci::rowWelchTests function: plot histogram corresponding \\(p\\)-values:  expected, distribution presents large number small \\(p\\)-values (include signals, .e. differentially expressed genes) mixed uniformly distributed \\(p\\)-values (corresponding non-differentially expressed genes).","code":"data(expr_ALL, package = \"sanssouci.data\") dat <- expr_ALL rm(expr_ALL) table(colnames(dat)) #>  #> BCR/ABL     NEG  #>      37      42 m <- nrow(dat) categ <- ifelse(colnames(dat) == \"BCR/ABL\", 1, 0) # map to 0/1 dex <- data.frame(rowWelchTests(dat, categ)) pval <- dex[[\"p.value\"]] hist(pval, probability = TRUE, breaks = 20,      xlab = \"p-value\", main = \"p-value distributon\")"},{"path":"https://sanssouci-org.github.io/sanssouci/articles/post-hoc_differential-expression.html","id":"multiple-testing-correction-false-discovery-rate-control","dir":"Articles","previous_headings":"Motivation: a differential gene expression study","what":"Multiple testing correction: False Discovery Rate control","title":"Permutation-based post hoc inference for differential gene expression studies","text":"state art approach large-scale multiple testing control False Discovery Rate (FDR), expected proportion wrongly selected genes (false positives) among selected genes Benjamini Hochberg (1995). widely used method control risk Benjamini-Hochberg (BH) procedure, shown control FDR hypotheses corresponding non-differentially expressed genes independent Benjamini Hochberg (1995) satisfy specific type positive dependence called Positive Regression Dependence Subset (PRDS) \\(\\mathcal{H}_0\\) truly non-differentially expressed genes Benjamini Yekutieli (2001). application BH procedure level \\(q = 0.05\\) illustrated figures (genes displayed first one, second one zoom top genes):","code":"q <- 0.05 adjp_BH <- p.adjust(pval, method = \"BH\") dex$adjp <- adjp_BH S_BH <- which(adjp_BH <= q) nBH <- length(S_BH) nBH #> [1] 150 my_col <- \"#FF000080\" dexo <- dex[order(pval), ]  ## order genes by increasing p-values dexo[[\"gene_order\"]] <- 1:nrow(dex)  bh_plot <- ggplot(dexo, aes(x = gene_order, y = p.value)) +    geom_line() +   xlab(\"Number of top genes\") + ylab(\"Ordered p-value\") +   geom_abline(slope = 1/m, intercept = 0, linetype = 2, size = 1) +   geom_abline(slope = q/m, color = my_col, size = 2) +   # geom_segment(aes(x = nBH, y = 0, yend = q*nBH/m, xend = nBH), linetype = \"dotted\") +   # geom_segment(aes(x = 0, y = q*nBH/m, xend = nBH, yend = q*nBH/m), linetype = \"dotted\") +   geom_abline(slope = 0, intercept = q, linetype = \"dotted\", color = my_col, size = 2) +   theme_bw() +   theme(axis.text = element_text(size = 14),          axis.title = element_text(size = 18))   #> Warning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0. #> ℹ Please use `linewidth` instead. #> This warning is displayed once every 8 hours. #> Call `lifecycle::last_lifecycle_warnings()` to see where this warning was #> generated. #geom_text(x = 0, y = q, label = expression(alpha), color = my_col)  bh_plot xmax <- nBH*2.5 ymax <- dexo$p.value[xmax] bh_plot +    xlim(1, xmax) + ylim(0, ymax) +   geom_segment(aes(x = nBH, y = 0, yend = q*nBH/m, xend = nBH), linetype = \"dotted\") +   geom_segment(aes(x = 1, y = q*nBH/m, xend = nBH, yend = q*nBH/m), linetype = \"dotted\", col = 1) #> Warning in geom_segment(aes(x = nBH, y = 0, yend = q * nBH/m, xend = nBH), : All aesthetics have length 1, but the data has 9038 rows. #> ℹ Please consider using `annotate()` or provide this layer with data containing #>   a single row. #> Warning in geom_segment(aes(x = 1, y = q * nBH/m, xend = nBH, yend = q * : All aesthetics have length 1, but the data has 9038 rows. #> ℹ Please consider using `annotate()` or provide this layer with data containing #>   a single row. #> Warning: Removed 8663 rows containing missing values or values outside the scale range #> (`geom_line()`)."},{"path":"https://sanssouci-org.github.io/sanssouci/articles/post-hoc_differential-expression.html","id":"basic-posthoc-bounds","dir":"Articles","previous_headings":"Motivation: a differential gene expression study","what":"Basic posthoc bounds","title":"Permutation-based post hoc inference for differential gene expression studies","text":"Post hoc inference makes possible build confidence statements number true/false positives within set \\(S\\) genes: \\(S\\) may selected seing data (e.g., \\(S\\) may set rejections BH prcedure), multiple choices \\(S\\) allowed. Post hoc inference popularized Goeman Solari (2011).","code":"alpha <- 0.1 pvalo <- dexo$p.value"},{"path":"https://sanssouci-org.github.io/sanssouci/articles/post-hoc_differential-expression.html","id":"k_0-bonferroni-bound","dir":"Articles","previous_headings":"Motivation: a differential gene expression study > Basic posthoc bounds","what":"\\(k_0\\)-Bonferroni bound","title":"Permutation-based post hoc inference for differential gene expression studies","text":"fixed \\(k_0\\), generalized Bonferroni procedure consisting rejecting hypotheses \\(R_{k_0} = \\{: p_i \\leq \\alpha k_0/m\\}\\) controls \\(k_0\\)-Family-Wise Error Rate: ensures probability larger \\(1-\\alpha\\), number false positives \\(R_{k_0}\\) larger \\(k_0-1\\). noted Blanchard, Neuvial, Roquain (2021), leads post hoc bound: \\[V(S)=\\sum_{\\S} 1_{\\{p_i \\geq \\alpha k_0 /|S|\\}} + k_0-1\\] application calculate bound associated \\(k_0=100\\) \\(\\alpha = 0.1\\): implies probability larger 0.9 false discovery proportion among genes selected BH procedure level \\(q= 0.05\\) upper bounded 0.66.","code":"k0 <- 100 S <- 1:nBH FP_k0 <- sum(pvalo[S] >= alpha*k0/m) + k0 - 1 FP_k0/nBH #> [1] 0.66"},{"path":"https://sanssouci-org.github.io/sanssouci/articles/post-hoc_differential-expression.html","id":"simes-bound","dir":"Articles","previous_headings":"Motivation: a differential gene expression study > Basic posthoc bounds","what":"Simes bound","title":"Permutation-based post hoc inference for differential gene expression studies","text":"refined post hoc bound proposed Goeman Solari (2011) PRDS assumption. framework Blanchard, Neuvial, Roquain (2021) bound direct consequence Simes (1986) inequality. can applied 150 rejections BH procedure follows: Simes bound implies probability larger 0.9, false discovery proportion among genes selected BH procedure level \\(q= 0.05\\) upper bounded 0.44. Simes bound sharper \\(k_0\\)-Bonferroni bound obtained joint control \\(k\\)-FWER \\(k=1, \\dots, m\\). \\(k_0\\)-Bonferroni bound therefore considered vignette.","code":"obj <- SansSouci(Y = dat, groups = categ) res_Simes <- fit(obj, B = 0, family = \"Simes\", alpha = alpha) ## B=0 => no calibration! FP_Simes <- predict(res_Simes, S_BH, what = \"FP\")"},{"path":"https://sanssouci-org.github.io/sanssouci/articles/post-hoc_differential-expression.html","id":"tighter-confidence-bounds-by-adaptation-to-unknown-dependence","dir":"Articles","previous_headings":"","what":"Tighter confidence bounds by adaptation to unknown dependence","title":"Permutation-based post hoc inference for differential gene expression studies","text":"discussed Blanchard, Neuvial, Roquain (2020), -described bound two major limitations, consequence Simes inequality: known valid certain positive dependence assumptions (PRDS) joint \\(p\\)-value distribution. Although PRDS assumption generally accepted case differential expression studies (justifies application BH procedure ), formally proved hold case. adaptive specific type dependence hand particular data set. bypass limitations, Blanchard, Neuvial, Roquain (2020) proposed randomization-based procedure known \\(\\lambda\\)-calibration, yields tighter bounds adapted dependency observed data set hand. closely related approach proposed Hemerik, Solari, Goeman (2019). case two-sample tests, calibration can achieved permutation class labels: alternative Simes/Linear reference family Beta reference family: expected theory, post hoc bounds obtained calibration methods much tighter Simes bound: next two sections illustrate use improved bounds order build confidence curves true false positives confidence statements volcano plots","code":"B <- 1000 res <- fit(obj, B = B, alpha = alpha, family = \"Simes\") K <- 50 res_Beta <- fit(res, B = B, alpha = alpha, family = \"Beta\", K = K) resList <- list(\"Simes\" = res_Simes,             \"Linear\" = res,             \"Beta\" = res_Beta) names(resList)[3] <- sprintf(\"Beta (K=%s)\", K)  bounds <- sapply(resList, predict, S_BH) rownames(bounds) <- c(\"Lower bound on True Positives\", \"Upper bound on False Discovery Proportion\") knitr::kable(t(bounds), digits = 2)"},{"path":"https://sanssouci-org.github.io/sanssouci/articles/post-hoc_differential-expression.html","id":"confidence-curves-on-top-k-lists","dir":"Articles","previous_headings":"","what":"Confidence curves on “top-\\(k\\)” lists","title":"Permutation-based post hoc inference for differential gene expression studies","text":"absence prior information genes, natural idea rank decreasing statistical significance, natural question ask : Can provide lower confidence curve number (proportion) truly differentially expressed genes among significant genes? illustrate use post-hoc methods provide type information. specifcally, build confidence statements number true/false positives within top \\(k\\) significant genes differential gene expression study, \\(k\\) may defined user seing data, multiple choices \\(k\\) allowed. confidence curves obtained calibration Simes Beta families can compared graphically (parametric) Simes curve can obtained Goeman Solari (2011):  calibrated curves outperform Simes curve example.","code":"conf_bounds <- lapply(resList, predict, all = TRUE) # cols <- c(\"lightgray\", \"black\", \"darkgray\") cols <- RColorBrewer::brewer.pal(length(conf_bounds), \"Dark2\") p <- plotConfCurve(conf_bounds, xmax = 300, cols = cols) p + geom_vline(xintercept = nBH, color = \"gray\", linetype = \"dotted\", size = 1.5) +   geom_line(size = 1.5)"},{"path":"https://sanssouci-org.github.io/sanssouci/articles/post-hoc_differential-expression.html","id":"volcano-plots","dir":"Articles","previous_headings":"","what":"Volcano plots","title":"Permutation-based post hoc inference for differential gene expression studies","text":"interactive volcano plot, see volcano plot shiny application. Let us assume interested genes selected BH procedure level \\(q = 0.05\\) whose fold change larger \\(r = 0.3\\) absolute value. “fold change” defined difference expression means two groups compared; estimate effect size gene. double selection corresponds two sets genes, positive/negative fold change, can represented following plot:  type plot called “volcano plot” Cui Churchill (2003). Post hoc inference makes possible obtain statistical guarantees selections ones represented figure. substantial gain power offered -described calibration illustrated follows Simes reference family:  Beta reference family.  comparison bounds may summarized following Table: Post hoc bounds true positives user-defined gene selections","code":"q <- 0.05 r <-  0.3 ylim <- c(0, 6) volcanoPlot(res_Simes, q = q, r = r, ylim = ylim) volcanoPlot(res, q = q, r = r, ylim = ylim) volcanoPlot(res_Beta, q = q, r = r, ylim = ylim) fc <- foldChanges(res) S_pos <- which(fc >= r & adjp_BH <= q) S_neg <- which(fc <= -r & adjp_BH <= q) S_all <- union(S_pos, S_neg)  all_bounds <- function(S, resList) {   c(length(S), sapply(resList, predict, S, \"TP\")) } tab <- rbind(all_bounds(S_pos, resList),               all_bounds(S_neg, resList),              all_bounds(S_all, resList)) plab <- paste(\"BH-adjusted p.value <\", q) lab <- c(paste(plab, \"&\", \" fold change  > \", r),          paste(plab, \"&\", \" fold change  < \", -r),          paste(plab, \"&\", \"|fold change| > \", r)) tab <- cbind(lab, tab) cap <- \"Post hoc bounds on true positives in user-defined gene selections\" #knitr::kable(tab, caption = cap, format = \"latex\") knitr::kable(tab, caption = cap)"},{"path":"https://sanssouci-org.github.io/sanssouci/articles/post-hoc_differential-expression.html","id":"session-information","dir":"Articles","previous_headings":"","what":"Session information","title":"Permutation-based post hoc inference for differential gene expression studies","text":"","code":"sessionInfo() #> R version 4.4.1 (2024-06-14) #> Platform: x86_64-pc-linux-gnu #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] sanssouci_0.13.0 ggplot2_3.5.1    #>  #> loaded via a namespace (and not attached): #>  [1] Matrix_1.7-0       gtable_0.3.5       jsonlite_1.8.8     crayon_1.5.3       #>  [5] highr_0.11         compiler_4.4.1     Rcpp_1.0.12        jquerylib_0.1.4    #>  [9] systemfonts_1.1.0  scales_1.3.0       textshaping_0.4.0  yaml_2.3.8         #> [13] fastmap_1.2.0      lattice_0.22-6     R6_2.5.1           labeling_0.4.3     #> [17] generics_0.1.3     knitr_1.47         tibble_3.2.1       desc_1.4.3         #> [21] munsell_0.5.1      RColorBrewer_1.1-3 bslib_0.7.0        pillar_1.9.0       #> [25] rlang_1.1.4        utf8_1.2.4         cachem_1.1.0       xfun_0.45          #> [29] fs_1.6.4           sass_0.4.9         memoise_2.0.1      cli_3.6.3          #> [33] pkgdown_2.0.9      withr_3.0.0        magrittr_2.0.3     matrixTests_0.2.3  #> [37] digest_0.6.35      grid_4.4.1         lifecycle_1.0.4    vctrs_0.6.5        #> [41] evaluate_0.24.0    glue_1.7.0         farver_2.1.2       codetools_0.2-20   #> [45] ragg_1.3.2         fansi_1.0.6        colorspace_2.1-0   rmarkdown_2.27     #> [49] purrr_1.0.2        matrixStats_1.3.0  tools_4.4.1        pkgconfig_2.0.3    #> [53] htmltools_0.5.8.1"},{"path":"https://sanssouci-org.github.io/sanssouci/articles/post-hoc_differential-expression.html","id":"reproducibility","dir":"Articles","previous_headings":"","what":"Reproducibility","title":"Permutation-based post hoc inference for differential gene expression studies","text":"re-build vignette source, use:","code":"rmarkdown::render(\"post-hoc_differential-expression.Rmd\", output_format = \"pdf_document\") # To keep intermediate files, add option 'clean = FALSE' rmarkdown::render(\"post-hoc_differential-expression.Rmd\", output_format = \"html_document\")"},{"path":[]},{"path":"https://sanssouci-org.github.io/sanssouci/articles/post-hoc_differential-expression_RNAseq.html","id":"motivation-a-differential-gene-expression-study","dir":"Articles","previous_headings":"","what":"Motivation: a differential gene expression study","title":"Permutation-based post hoc inference for differential gene expression studies: RNAseq data","text":"focus differential gene expression studies cancerology. studies aim identifying genes whose mean expression level differs significantly two () populations, based sample gene expression measurements individuals populations. data set consists gene expression measurements \\(n = 270\\) patients Cancer Genome Atlas Urothelial Bladder Carcinoma (TCGA-BLCA) data collection (Cancer Genome Atlas Research Network et al. (2014)). Following standard practice RNAseq data analysis, convert measurements count per millions (CPM) order make comparable across samples, filter genes low counts samples:   patients classified two subgoups, according clinical stage (II III): goal study understand molecular differences gene expression level stage II stage III populations. patient characterized vector \\(m = 12534\\) gene expression values. aim addressing following question: genes difference distribution expression levels stage II stage III populations? question can addressed performing one statistical test per gene, define “differentially expressed” genes passing significance threshold. , use Wilcoxon rank sum (Mann-Whitney) test comparing two independent samples. rank-based non-parametric test. fast version test implemented sanssouci::rowWilcoxonTests function. obtain post hoc bounds, create object class SansSouci run fit method perform calibration \\(B=1,000\\) permutations. target risk level set \\(\\alpha = 0.1\\), meaning statements made true probability greater \\(1-\\alpha= 0.9\\). comparison purposes also run (parametric) Simes method introduced Goeman Solari (2011):","code":"data(\"RNAseq_blca\", package = \"sanssouci.data\") Y <- RNAseq_blca groups <- ifelse(colnames(RNAseq_blca) == \"III\", 1, 0) rm(RNAseq_blca) CPM <- Y/colSums(Y)*1e6 # plot(density(rowMaxs(log(1 + CPM)))) ww <- which(rowMaxs(CPM) < 10) ww <- which(rowQuantiles(log(1 + CPM), prob = 0.75) < log(1+5)) Y <- CPM[-ww, ] plot(density(log(1 + Y))) plot(density(log(1 + CPM))) m <- nrow(Y) table(groups) #> groups #>   0   1  #> 130 140 alpha <- 0.1 obj <- SansSouci(Y = log(1 + Y), groups = groups) res <- fit(obj, B = 1000, alpha = alpha, family = \"Simes\",             rowTestFUN = rowWilcoxonTests) res_Simes <- fit(obj, B = 0, family = \"Simes\", alpha = alpha,                   rowTestFUN = rowWilcoxonTests) ## B=0 => no calibration!  resList <- list(\"SansSouci\" = res,                 \"Simes (parametric)\" = res_Simes)"},{"path":"https://sanssouci-org.github.io/sanssouci/articles/post-hoc_differential-expression_RNAseq.html","id":"confidence-curves-for-top-k-lists","dir":"Articles","previous_headings":"","what":"Confidence curves for “top-\\(k\\)” lists","title":"Permutation-based post hoc inference for differential gene expression studies: RNAseq data","text":"absence prior information genes, natural idea rank decreasing statistical significance, natural question ask : Can provide lower confidence curve number (proportion) truly differentially expressed genes among significant genes? confidence curve obtained calibration solid black line figure : plot can interpreted follows: among 2000 significant genes, number truly differentially expressed genes least 1163 (right panel). Equivalently, FDP among 2000 genes 0.42 (left panel). dashed gray curve obtained parametric Simes method introduced Goeman Solari (2011). comparison two curves illustrates gain power obtained using permutations methods adapt dependence genes. example, parametric Simes method gives following guarantees: among 2000 significant genes, number truly differentially expressed genes least 928 (right panel). Equivalently, FDP among 2000 genes 0.54 (left panel).","code":"conf_bounds <- lapply(resList, predict, all = TRUE) cols <- c(\"black\", \"darkgray\") p <- plotConfCurve(conf_bounds, xmax = 5000, cols = cols) +    geom_line(size = 1.5) #> Warning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0. #> ℹ Please use `linewidth` instead. #> This warning is displayed once every 8 hours. #> Call `lifecycle::last_lifecycle_warnings()` to see where this warning was #> generated. # ggsave(p, file = \"conf-curve.pdf\", width = 6, height = 4)"},{"path":"https://sanssouci-org.github.io/sanssouci/articles/post-hoc_differential-expression_RNAseq.html","id":"differentially-expressed-genes","dir":"Articles","previous_headings":"Confidence curves for “top-\\(k\\)” lists","what":"Differentially expressed genes","title":"Permutation-based post hoc inference for differential gene expression studies: RNAseq data","text":"section show curves may used address question: genes differentially expressed high probability? , define differentially expressed genes largest set genes FDP bound less user-given value, example \\(q = 0.1\\). corresponds drawing horizontal line preceding plot: Using \\(q = 0.1\\), obtain 940 differentially expressed genes. Note gene list clear statistical interpretation: probability \\(1-\\alpha = 0.9\\), proportion false positives (, genes called DE mistake) less \\(q = 0.1\\). example also illustrates increase power obtained calibration, since parametric Simes method yields subset “” 733 genes called differentially expressed (identical statistical guarantees).","code":"q <- 0.1 # FDP budget (user-defined) FDP <- lapply(resList, predict, what = \"FDP\", all = TRUE) n_DEG <- sapply(FDP, function(x) sum(x <= q))  size <- 1.5 p <- plotConfCurve(FDP, xmax = 2.5*n_DEG, col = cols) +   geom_hline(yintercept = q, linetype = \"dashed\", size = size) +   geom_vline(xintercept = n_DEG, linetype = \"dotted\", col = cols, size = size) +    geom_line(size = size) # ggsave(p, file = \"conf-curve_DEG.pdf\", width = 6, height = 4)"},{"path":"https://sanssouci-org.github.io/sanssouci/articles/post-hoc_differential-expression_RNAseq.html","id":"comparison-to-fdr-control","dir":"Articles","previous_headings":"Confidence curves for “top-\\(k\\)” lists","what":"Comparison to FDR control","title":"Permutation-based post hoc inference for differential gene expression studies: RNAseq data","text":"argue ensuring high probability FDP less user-defined budget, done , interpretable widely used False Discovery Rate (FDR) control introduced Benjamini Hochberg (1995). Indeed, FDR control guarantees expected (average) FDP among DE genes less user-defined FDR budget. However, true FDP may well far expected value, especially since variability FDP known increase degree dependence genes. case, BH procedure consider 1713 genes differentially expressed FDR level 0.05. set DE genes larger 940 genes called DE method, latter comes stronger interpretable statistical guarantees FDR control.","code":"adjp <- p.adjust(pValues(res), method = \"BH\") FDR_level <- 0.05 n_BH <- sum(adjp < FDR_level) n_BH #> [1] 1713"},{"path":"https://sanssouci-org.github.io/sanssouci/articles/post-hoc_differential-expression_RNAseq.html","id":"volcano-plots","dir":"Articles","previous_headings":"","what":"Volcano plots","title":"Permutation-based post hoc inference for differential gene expression studies: RNAseq data","text":"classical practice gene expression studies define DE genes passing significance filter (small \\(p\\)-value) effect size “fold change” filter. , fold change gene defined difference expression medians (log scale) two groups compared. double selection \\(p\\)-value fold change corresponds two sets genes, positive/negative fold change, can represented following plot:  type plot called “volcano plot” Cui Churchill (2003). Post hoc inference makes possible obtain statistical guarantees selections ones represented figure.","code":"volcanoPlot(res, p = 1e-4, r = 0.5)"},{"path":"https://sanssouci-org.github.io/sanssouci/articles/post-hoc_differential-expression_RNAseq.html","id":"custom-statistics-example-using-limma-voom","dir":"Articles","previous_headings":"Volcano plots","what":"Custom statistics: example using limma-voom","title":"Permutation-based post hoc inference for differential gene expression studies: RNAseq data","text":"Post hoc bounds can calculated gene selection. particular, even Wilcoxon tests performed calibration post hoc bounds, possible rely statistics select genes interest. section, illustrate idea making volcano plot based \\(p\\)-values log-fold changes obtained limma-voom method Law et al. (2014) implemented limma package (Ritchie et al. (2015)). next code chunk adapted vignette limma package: next plot suggests \\(p\\)-values obtained limma-voom Wilcoxon tests consistent.  Finally obtain volcano plot based limma statistics.","code":"library(limma) library(edgeR) d <- DGEList(Y) #> Repeated column names found in count matrix d <- calcNormFactors(d) Grp <- as.factor(groups) mm <- model.matrix(~0 + Grp)  y <- voom(d, mm, plot = FALSE)  res_lm <- lmFit(y, mm) contr <- makeContrasts(Grp1 - Grp0, levels = colnames(coef(res_lm))) res_fit <- contrasts.fit(res_lm, contr) res_eb <- eBayes(res_fit) TT <- topTable(res_eb, sort.by = \"none\", number = Inf) df <- data.frame(wilcox = -log10(pValues(res)), limma = -log10(TT$P.Value)) ggplot(df, aes(x = limma, y = wilcox)) +    geom_point(color = \"#10101010\") +    ggtitle(\"p-values (log-scale)\") volcanoPlot(res,              fold_changes = TT$logFC,              p_values = TT$P.Value,              p = 1e-4, r = 0.5)"},{"path":"https://sanssouci-org.github.io/sanssouci/articles/post-hoc_differential-expression_RNAseq.html","id":"session-information","dir":"Articles","previous_headings":"","what":"Session information","title":"Permutation-based post hoc inference for differential gene expression studies: RNAseq data","text":"","code":"sessionInfo() #> R version 4.4.1 (2024-06-14) #> Platform: x86_64-pc-linux-gnu #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] edgeR_4.2.0       limma_3.60.3      matrixStats_1.3.0 sanssouci_0.13.0  #> [5] ggplot2_3.5.1     #>  #> loaded via a namespace (and not attached): #>  [1] Matrix_1.7-0      gtable_0.3.5      jsonlite_1.8.8    crayon_1.5.3      #>  [5] highr_0.11        compiler_4.4.1    Rcpp_1.0.12       jquerylib_0.1.4   #>  [9] systemfonts_1.1.0 scales_1.3.0      textshaping_0.4.0 statmod_1.5.0     #> [13] yaml_2.3.8        fastmap_1.2.0     lattice_0.22-6    R6_2.5.1          #> [17] labeling_0.4.3    generics_0.1.3    knitr_1.47        tibble_3.2.1      #> [21] desc_1.4.3        munsell_0.5.1     bslib_0.7.0       pillar_1.9.0      #> [25] rlang_1.1.4       utf8_1.2.4        cachem_1.1.0      xfun_0.45         #> [29] fs_1.6.4          sass_0.4.9        memoise_2.0.1     cli_3.6.3         #> [33] pkgdown_2.0.9     withr_3.0.0       magrittr_2.0.3    matrixTests_0.2.3 #> [37] locfit_1.5-9.9    digest_0.6.35     grid_4.4.1        lifecycle_1.0.4   #> [41] vctrs_0.6.5       evaluate_0.24.0   glue_1.7.0        farver_2.1.2      #> [45] codetools_0.2-20  ragg_1.3.2        fansi_1.0.6       colorspace_2.1-0  #> [49] rmarkdown_2.27    purrr_1.0.2       tools_4.4.1       pkgconfig_2.0.3   #> [53] htmltools_0.5.8.1"},{"path":"https://sanssouci-org.github.io/sanssouci/articles/post-hoc_differential-expression_RNAseq.html","id":"reproducibility","dir":"Articles","previous_headings":"","what":"Reproducibility","title":"Permutation-based post hoc inference for differential gene expression studies: RNAseq data","text":"re-build vignette source, use:","code":"rmarkdown::render(\"post-hoc_differential-expression_RNAseq.Rmd\", output_format = \"pdf_document\") # To keep intermediate files, add option 'clean = FALSE' rmarkdown::render(\"post-hoc_differential-expression_RNAseq.Rmd\", output_format = \"html_document\")"},{"path":[]},{"path":"https://sanssouci-org.github.io/sanssouci/articles/post-hoc_fMRI.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"Permutation-based post hoc inference for fMRI studies","text":"first make sure required R packages installed loaded. set seed random number generator numerical reproducibility results:","code":"require(\"ggplot2\") || install.packages(\"ggplot2\") require(\"sanssouci\") || remotes::install_github(\"sanssouci-org/sanssouci@develop\") require(\"sanssouci.data\") || remotes::install_github(\"sanssouci-org/sanssouci.data\") library(\"ggplot2\") library(\"sanssouci\") set.seed(20200924)"},{"path":"https://sanssouci-org.github.io/sanssouci/articles/post-hoc_fMRI.html","id":"loading-and-preprocessing-the-data","dir":"Articles","previous_headings":"","what":"Loading and preprocessing the data","title":"Permutation-based post hoc inference for fMRI studies","text":"samples classified two subgoups, subgroups correspond two different motor tasks subjects asked perform, “left click” vs “right click”:","code":"data(fMRI_localizer, package = \"sanssouci.data\") Y <- fMRI_localizer rm(fMRI_localizer) m <- nrow(Y) categ <- colnames(Y) knitr::kable(table(categ))"},{"path":"https://sanssouci-org.github.io/sanssouci/articles/post-hoc_fMRI.html","id":"post-hoc-inference-by-the-simes-inequality","dir":"Articles","previous_headings":"","what":"Post hoc inference by the Simes inequality","title":"Permutation-based post hoc inference for fMRI studies","text":"start calculating Simes bound introduced Goeman Solari (2011). bound already applied fMRI data, see Rosenblatt et al. (2018). paper, post hoc inference (Simes inequality) referred “-resolutions inference” (ARI). set target confidence level \\(\\alpha = 0.1\\). Simes bound implemented package ‘cherry’. , use ‘sanssouci’ package, follows: Post hoc bounds obtained bound function: Simes bound implies probability larger 0.9, number voxels associated task interest (among 48900 voxels) least 88. Disregarding (now) voxel locations brain, plot confidence bounds \\(p\\)-value level sets (corresponding maps obtained thresholding given test statistic):","code":"alpha <- 0.1 groups <- ifelse(colnames(Y) == \"left\", 0, 1) # map to 0/1 obj <- SansSouci(Y = Y, groups = groups) res_Simes <- fit(obj, B = 0, family = \"Simes\", alpha = alpha) ## B=0 => no calibration! TP_Simes <- predict(res_Simes, what = \"TP\") TP_Simes #> [1] 88 xmax <- 800 plot(res_Simes, xmax = xmax) +   ggtitle(\"Post hoc confidence curves: Simes/ARI\")"},{"path":"https://sanssouci-org.github.io/sanssouci/articles/post-hoc_fMRI.html","id":"tighter-confidence-bounds-by-adaptation-to-unknown-dependence","dir":"Articles","previous_headings":"","what":"Tighter confidence bounds by adaptation to unknown dependence","title":"Permutation-based post hoc inference for fMRI studies","text":"discussed Blanchard, Neuvial, Roquain (2020), -described bound known valid certain positive dependence assumptions (PRDS) joint \\(p\\)-value distribution. Although PRDS assumption widely accepted fMRI studies (see Genovese, Lazar, Nichols (2002), Nichols Hayasaka (2003)), argue (demonstrate ) assumption yields overly conservative post hoc bounds. Indeed, Simes bound construction adaptive specific type dependence hand particular data set. bypass limitations, Blanchard, Neuvial, Roquain (2020) proposed randomization-based procedure known \\(\\lambda\\)-calibration, yields tighter bounds adapted dependency observed data set hand. note related approach proposed Hemerik, Solari, Goeman (2019). case two-sample tests, calibration can achieved permutation class labels, readily available via fit function sanssouci package: alternative Simes/Linear reference family Beta reference family: expected theory, post hoc bounds obtained calibration methods much tighter Simes bound: next two sections illustrate use improved bounds order build confidence curves true false positives confidence statements brain atlases","code":"B <- 200 res <- fit(obj, alpha = alpha, B = B, family = \"Simes\") K <- 500 res_Beta <- fit(res, alpha = alpha, B = B, family = \"Beta\", K = K) resList <- list(\"Simes/ARI\" = res_Simes,             \"Linear\" = res,             \"Beta\" = res_Beta) names(resList)[3] <- sprintf(\"Beta (K=%s)\", K)  bounds <- sapply(resList, predict, what = \"TP\") knitr::kable(bounds, digits = 2, col.names = c(\"Lower bound on True Positives\"))"},{"path":"https://sanssouci-org.github.io/sanssouci/articles/post-hoc_fMRI.html","id":"confidence-curves-on-top-k-lists","dir":"Articles","previous_headings":"","what":"Confidence curves on “top-\\(k\\)” lists","title":"Permutation-based post hoc inference for fMRI studies","text":"absence prior information voxels, natural idea rank decreasing statistical significance, natural question ask : Can provide lower confidence curve number (proportion) truly associated voxels among significant ones? illustrate use post-hoc methods provide type information. specifcally, build confidence statements number true/false positives within top \\(k\\) significant voxels, \\(k\\) may defined user seing data, multiple choices \\(k\\) allowed. confidence curves obtained calibration Simes Beta families can compared graphically (parametric) Simes curve can obtained Goeman Solari (2011):  example, ARI outperformed permutation-based approaches, able adapt unknown dependency: target risk level (\\(\\alpha = 0.1\\)), permutation-based bounds much less conservative classical Simes/ARI bound.","code":"conf_bounds <- lapply(resList, predict, all = TRUE) # cols <- c(\"lightgray\", \"black\", \"darkgray\") cols <- RColorBrewer::brewer.pal(length(conf_bounds), \"Dark2\") p <- plotConfCurve(conf_bounds, xmax = 700, cols = cols) p + geom_line(size=1.5) #> Warning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0. #> ℹ Please use `linewidth` instead. #> This warning is displayed once every 8 hours. #> Call `lifecycle::last_lifecycle_warnings()` to see where this warning was #> generated."},{"path":"https://sanssouci-org.github.io/sanssouci/articles/post-hoc_fMRI.html","id":"post-hoc-bounds-on-brain-atlas-areas","dir":"Articles","previous_headings":"","what":"Post hoc bounds on brain atlas areas","title":"Permutation-based post hoc inference for fMRI studies","text":"goal section calculate post hoc bound user-defined brain regions. One definition regions given Harvard-Oxford brain atlas, available sanssouci.data package. atlas made 48 areas. areas, calculate three post hoc bounds obtained . Note construction post hoc bounds, 48 bounds valid simultaneously (particular, multiple testing correction required stage). particular case, signal revealed post hoc bound 3 areas permutation-based approaches: Lower bounds number true positives 3 brain regions. , ARI outperformed permutation-based approaches able adapt unknown dependency: target risk level (\\(\\alpha = 0.1\\)) permutation-based bounds substantially less conservative classical Simes/ARI bound.","code":"data(brainAtlas, package = \"sanssouci.data\") bounds <- apply(brainAtlas, 1, FUN = function(reg) {   S <- which(reg > 0)   c(\"Region size\" = length(S), sapply(resList, predict, S, \"TP\")) }) ww <- which(colSums(bounds[3:4, ])>0) cap <- sprintf(\"Lower bounds on the number of true positives in %s brain regions.\",                length(ww)) knitr::kable(t(bounds[, ww]), caption = cap)"},{"path":"https://sanssouci-org.github.io/sanssouci/articles/post-hoc_fMRI.html","id":"session-information","dir":"Articles","previous_headings":"","what":"Session information","title":"Permutation-based post hoc inference for fMRI studies","text":"","code":"sessionInfo() #> R version 4.4.1 (2024-06-14) #> Platform: x86_64-pc-linux-gnu #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] sanssouci_0.13.0 ggplot2_3.5.1    #>  #> loaded via a namespace (and not attached): #>  [1] Matrix_1.7-0       gtable_0.3.5       jsonlite_1.8.8     crayon_1.5.3       #>  [5] highr_0.11         compiler_4.4.1     Rcpp_1.0.12        jquerylib_0.1.4    #>  [9] systemfonts_1.1.0  scales_1.3.0       textshaping_0.4.0  yaml_2.3.8         #> [13] fastmap_1.2.0      lattice_0.22-6     R6_2.5.1           labeling_0.4.3     #> [17] generics_0.1.3     knitr_1.47         tibble_3.2.1       desc_1.4.3         #> [21] munsell_0.5.1      RColorBrewer_1.1-3 bslib_0.7.0        pillar_1.9.0       #> [25] rlang_1.1.4        utf8_1.2.4         cachem_1.1.0       xfun_0.45          #> [29] fs_1.6.4           sass_0.4.9         memoise_2.0.1      cli_3.6.3          #> [33] pkgdown_2.0.9      withr_3.0.0        magrittr_2.0.3     matrixTests_0.2.3  #> [37] digest_0.6.35      grid_4.4.1         lifecycle_1.0.4    vctrs_0.6.5        #> [41] evaluate_0.24.0    glue_1.7.0         farver_2.1.2       codetools_0.2-20   #> [45] ragg_1.3.2         fansi_1.0.6        colorspace_2.1-0   rmarkdown_2.27     #> [49] purrr_1.0.2        matrixStats_1.3.0  tools_4.4.1        pkgconfig_2.0.3    #> [53] htmltools_0.5.8.1"},{"path":"https://sanssouci-org.github.io/sanssouci/articles/post-hoc_fMRI.html","id":"reproducibility","dir":"Articles","previous_headings":"","what":"Reproducibility","title":"Permutation-based post hoc inference for fMRI studies","text":"re-build vignette source, use:","code":"rmarkdown::render(\"post-hoc_fMRI.Rmd\", output_format = \"pdf_document\") # To keep intermediate files, add option 'clean = FALSE' rmarkdown::render(\"post-hoc_fMRI.Rmd\", output_format = \"html_document\")"},{"path":[]},{"path":"https://sanssouci-org.github.io/sanssouci/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Pierre Neuvial. Author, maintainer. Gilles Blanchard. Author. Guillermo Durand. Author. Nicolas Enjalbert-Courrech. Author. Etienne Roquain. Author.","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Pierre Neuvial, Gilles Blanchard, Guillermo Durand, Etienne Roquain Nicolas Enjalbert-Courrech (2024). sanssouci: Post Hoc Multiple Testing Inference. R package version 0.13.0. https://sanssouci-org.github.io/sanssouci Blanchard, G., Neuvial, P., & Roquain, E. (2021). agnostic post hoc approaches false positive control. 'Handbook Multiple Comparisons', edited Xinping Cui, Thorsten Dickhaus, Ying Ding, Jason C. Hsu. Chapman & Hall/CRC Blanchard, G., Neuvial, P., & Roquain, E. (2020). Post hoc confidence bounds false positives using reference families. Annals Statistics, 48(3), 1281-1303. Durand, G., Blanchard, G., Neuvial, P., & Roquain, E. (2020). Post hoc false positive control structured hypotheses. Scandinavian Journal Statistics, 47(4), 1114-1148. Enjalbert-Courrech, N. & Neuvial, P. (2022). Powerful interpretable control false discoveries two-group differential expression studies. Bioinformatics. doi: 10.1093/bioinformatcs/btac693","code":"@Manual{,   title = {sanssouci: Post Hoc Multiple Testing Inference},   author = {Pierre Neuvial and Gilles Blanchard and Guillermo Durand and Nicolas Enjalbert-Courrech and Etienne Roquain},   year = {2024},   note = {R package version 0.13.0},   url = {https://sanssouci-org.github.io/sanssouci}, } @InBook{,   title = {On agnostic post hoc approaches to false positive control},   author = {Gilles Blanchard and Pierre Neuvial and Etienne Roquain},   year = {2021},   url = {https://hal.archives-ouvertes.fr/hal-02320543},   booktitle = {Handbook of Multiple Comparisons},   chapter = {9},   publisher = {Chapman and Hall/CRC},   editor = {Xinping Cui and Thorsten Dickhaus and Ying Ding and Jason C. Hsu}, } @Article{,   title = {Post Hoc Confidence Bounds on False Positives Using Reference Families},   author = {Gilles Blanchard and Pierre Neuvial and Etienne Roquain},   journal = {Annals of Statistics},   year = {2020},   volume = {48},   number = {3},   pages = {1281--1303},   url = {https://projecteuclid.org/euclid.aos/1594972818}, } @Article{,   title = {Post hoc false positive control for structured hypotheses},   author = {Guillermo Durand and Gilles Blanchard and Pierre Neuvial and Etienne Roquain},   journal = {Scandinavian Journal of Statistics},   year = {2020},   url = {https://projecteuclid.org/euclid.aos/1594972818}, } @Article{,   title = {Powerful and interpretable control of false discoveries in two-group differential expression studies},   author = {Nicolas Enjalbert-Courrech and Pierre Neuvial},   journal = {Bioinformatics},   year = {2022},   url = {https://doi.org/10.1093/bioinformatics/btac693}, }"},{"path":"https://sanssouci-org.github.io/sanssouci/index.html","id":"sanssouci","dir":"","previous_headings":"","what":"Post Hoc Multiple Testing Inference","title":"Post Hoc Multiple Testing Inference","text":"goal sanssouci [sãsusi] perform post hoc inference: multiple testing context, sanssouci provides statistical guarantees possibly user-defined /data-driven sets hypotheses. Typical use cases include: see vignettes dedicated microarray data RNAseq data run volcano plot shiny app fMRI studies neuroimaging: see fMRI vignette. cases, permutation-based post hoc inference methods implemented sanssouci package outperform classical post hoc bounds based probabilistic inequalities.","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/index.html","id":"example-differential-analysis","dir":"","previous_headings":"","what":"Example: differential analysis","title":"Post Hoc Multiple Testing Inference","text":"briefly illustrate case differential gene expression study (see dedicated vignette information). start creating object class sanssouci gene expression data available sanssouci.data package, fit method B=1000 permutations, target risk alpha = 0.1.","code":"library(\"sanssouci\") #> remotes::install_github(\"sanssouci-org/sanssouci.data\") data(expr_ALL, package = \"sanssouci.data\") groups <- ifelse(colnames(expr_ALL) == \"BCR/ABL\", 1, 0) # map to 0/1 obj <- SansSouci(Y = expr_ALL, groups = groups) res <- fit(obj, alpha = 0.1, B = 1000)"},{"path":"https://sanssouci-org.github.io/sanssouci/index.html","id":"output-1---post-hoc-bound-for-a-subset-of-genes","dir":"","previous_headings":"Example: differential analysis","what":"Output 1 - Post hoc bound for a subset of genes","title":"Post Hoc Multiple Testing Inference","text":"Let us assume interested genes p-value 10−3. method ensures 1 − α = 90% confidence least 115 truly differentially expressed genes (true positives, TP) among 161 genes, corresponding false discovery proportion (FDP) less 0.29.","code":"S <- which(pValues(res) < 1e-3) predict(res, S) #>          TP         FDP  #> 115.0000000   0.2857143"},{"path":"https://sanssouci-org.github.io/sanssouci/index.html","id":"output-2---confidence-curves-for-top-k-feature-lists","dir":"","previous_headings":"Example: differential analysis","what":"Output 2 - Confidence curves for “top-k” feature lists","title":"Post Hoc Multiple Testing Inference","text":"Another output method following 1 − α-level confidence curve FDP (left panel) corresponding TP (right panel) “top-k” gene lists.","code":"library(\"ggplot2\") plot(res, xmax = 500) +   geom_vline(xintercept = length(S),               color = \"gray\", linetype = \"dotted\", size = 1.5) +   geom_line(size = 1.5) #> Warning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0. #> ℹ Please use `linewidth` instead. #> This warning is displayed once every 8 hours. #> Call `lifecycle::last_lifecycle_warnings()` to see where this warning was #> generated."},{"path":"https://sanssouci-org.github.io/sanssouci/index.html","id":"output-3---volcano-plots","dir":"","previous_headings":"Example: differential analysis","what":"Output 3 - Volcano plots","title":"Post Hoc Multiple Testing Inference","text":"refined user selection obtained selecting genes based significance (, FDR-adjusted p-value 0.05) fold change (, fold change 0.3). selections generally represented volcano plots:  Importantly, multiple selections can made without compromising validity bounds. IIDEA shiny app makes possible perform selections interactively without programming.","code":"volcanoPlot(res, q = 0.05, r = 0.3, ylim = c(0, 6))"},{"path":"https://sanssouci-org.github.io/sanssouci/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Post Hoc Multiple Testing Inference","text":"can install development version GitHub :","code":"# install.packages(\"pak\") pak::pkg_install(\"sanssouci-org/sanssouci\")"},{"path":"https://sanssouci-org.github.io/sanssouci/reference/SansSouci-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Basic methods for class SansSouci — SansSouci-methods","title":"Basic methods for class SansSouci — SansSouci-methods","text":"Basic methods class SansSouci nHyp: get number hypotheses nObs Get number observations label Get label post hoc method Print 'SansSouci' objects pValues: get p-values thresholds: get thresholds","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/SansSouci-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Basic methods for class SansSouci — SansSouci-methods","text":"","code":"# S3 method for SansSouci nHyp(object)  # S3 method for SansSouci nObs(object)  # S3 method for SansSouci label(object)  # S3 method for SansSouci print(x, ..., verbose = FALSE)  # S3 method for SansSouci pValues(object)  # S3 method for SansSouci foldChanges(object)  # S3 method for SansSouci thresholds(object)"},{"path":"https://sanssouci-org.github.io/sanssouci/reference/SansSouci-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Basic methods for class SansSouci — SansSouci-methods","text":"object object class SansSouci x object class SansSouci ... used verbose detailed output printed? Defaults FALSE","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/SansSouci-methods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Basic methods for class SansSouci — SansSouci-methods","text":"","code":"data(expr_ALL, package = \"sanssouci.data\") groups <- ifelse(colnames(expr_ALL) == \"NEG\", 0, 1) table(groups) #> groups #>  0  1  #> 42 37  a <- SansSouci(Y = expr_ALL, groups = groups) print(a) #> 'SansSouci' object: #> \tNumber of hypotheses:\t 9038  #> \tNumber of observations:\t 79  #> \t2-sample data #>  nHyp(a) #> [1] 9038 nObs(a) #> [1] 79 label(a) #> NULL  res <- fit(a, B = 100, alpha = 0.1) label(res) #> [1] \"Simes\" print(res) #> 'SansSouci' object: #> \tNumber of hypotheses:\t 9038  #> \tNumber of observations:\t 79  #> \t2-sample data #>  #> Parameters:  #> \tTest function:\t\trowWelchTests #> \tNumber of permutations:\tB=100 #> \tSignificance level:\talpha=0.1 #> \tReference family:\tSimes #> \t\t(of size:\tK=9038) #>  #> Output: #> \tCalibration parameter:\tlambda=0.1210904 str(pValues(res)) #>  Named num [1:9038] 0.9647 0.5203 0.9516 0.8438 0.0045 ... #>  - attr(*, \"names\")= chr [1:9038] \"ENSG00000000003\" \"ENSG00000000419\" \"ENSG00000000457\" \"ENSG00000000460\" ... str(foldChanges(res)) #>  Named num [1:9038] -0.0044 0.09394 -0.00426 -0.00886 0.27775 ... #>  - attr(*, \"names\")= chr [1:9038] \"ENSG00000000003\" \"ENSG00000000419\" \"ENSG00000000457\" \"ENSG00000000460\" ... str(thresholds(res)) #>  num [1:9038] 1.34e-05 2.68e-05 4.02e-05 5.36e-05 6.70e-05 ... volcanoPlot(res, q = 0.05, r = 0.5)"},{"path":"https://sanssouci-org.github.io/sanssouci/reference/SansSouci.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an object of class 'SansSouci' — SansSouci","title":"Create an object of class 'SansSouci' — SansSouci","text":"Create object class 'SansSouci'","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/SansSouci.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an object of class 'SansSouci' — SansSouci","text":"","code":"SansSouci(Y, groups, truth = NULL)"},{"path":"https://sanssouci-org.github.io/sanssouci/reference/SansSouci.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an object of class 'SansSouci' — SansSouci","text":"Y matrix \\(m\\) variables (hypotheses) \\(n\\) observations groups numeric vector \\(n\\) values \\(0, 1\\), groups observations perform two-sample tests truth optional numeric vector $m$ values $0,1$, status null hypothesis (0 means H0 true, 1 means H1 true). Typically used simulations.","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/SansSouci.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an object of class 'SansSouci' — SansSouci","text":"object class \"SansSouci\"","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/SansSouci.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an object of class 'SansSouci' — SansSouci","text":"","code":"data(expr_ALL, package = \"sanssouci.data\") groups <- ifelse(colnames(expr_ALL) == \"NEG\", 0, 1) table(groups) #> groups #>  0  1  #> 42 37  a <- SansSouci(Y = expr_ALL, groups = groups)  res <- fit(a, B = 100, alpha = 0.1) plot(res, xmax = 500)  res_beta <- fit(res, B = 100, alpha = 0.1, family = \"Beta\", K = 10) plot(res_beta, xmax = 500)"},{"path":"https://sanssouci-org.github.io/sanssouci/reference/SansSouciDyadic.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an object of class 'SansSouciStruct' with a dyadic structure — SansSouciDyadic","title":"Create an object of class 'SansSouciStruct' with a dyadic structure — SansSouciDyadic","text":"Create object class 'SansSouciStruct' dyadic structure","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/SansSouciDyadic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an object of class 'SansSouciStruct' with a dyadic structure — SansSouciDyadic","text":"","code":"SansSouciDyadic(   m,   leaf_size = NULL,   height = NULL,   direction = c(\"bottom-up\", \"top-down\"),   ... )"},{"path":"https://sanssouci-org.github.io/sanssouci/reference/SansSouciDyadic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an object of class 'SansSouciStruct' with a dyadic structure — SansSouciDyadic","text":"m numeric value, number hypotheses leaf_size integer value, number hypotheses leaf. Defaults NULL. height integer value, desired maximal height tree. Defaults NULL. direction character value, direction used building tree. Must one  \"bottom-\" \"top-\" ... arguments passed 'SansSouciStruct'","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/SansSouciDyadic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an object of class 'SansSouciStruct' with a dyadic structure — SansSouciDyadic","text":"object class 'SansSouciStruct'","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/SansSouciDyadic.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create an object of class 'SansSouciStruct' with a dyadic structure — SansSouciDyadic","text":"'leaf_size' 'height' NULL binary tree maximal height given total number hypotheses built. 'leaf_size' 'height' non NULL, 'height' ignored tree built desired leaf size.","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/SansSouciDyadic.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Create an object of class 'SansSouciStruct' with a dyadic structure — SansSouciDyadic","text":"Durand, G., Blanchard, G., Neuvial, P., & Roquain, E. (2020). Post hoc false positive control structured hypotheses. Scandinavian Journal Statistics, 47(4), 1114-1148.","code":""},{"path":[]},{"path":"https://sanssouci-org.github.io/sanssouci/reference/SansSouciDyadic.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an object of class 'SansSouciStruct' with a dyadic structure — SansSouciDyadic","text":"","code":"s <- 100 q <- 7 m <- s*2^q  obj <- SansSouciDyadic(m, leaf_size = s, direction = \"top-down\") obj <- SansSouciDyadic(m, height = 8, direction = \"top-down\")"},{"path":"https://sanssouci-org.github.io/sanssouci/reference/SansSouciSim.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an object of class 'SansSouci' from simulations — SansSouciSim","title":"Create an object of class 'SansSouci' from simulations — SansSouciSim","text":"Create 'SansSouci' object simulation Gaussian equi-correlated model","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/SansSouciSim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an object of class 'SansSouci' from simulations — SansSouciSim","text":"","code":"SansSouciSim(...)"},{"path":"https://sanssouci-org.github.io/sanssouci/reference/SansSouciSim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an object of class 'SansSouci' from simulations — SansSouciSim","text":"... Parameters passed gaussianSamples","code":""},{"path":[]},{"path":"https://sanssouci-org.github.io/sanssouci/reference/SansSouciSim.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an object of class 'SansSouci' from simulations — SansSouciSim","text":"","code":"obj <- SansSouciSim(   m = 543, rho = 0.4, n = 210,   pi0 = 0.8, SNR = 3, prob = 0.5 ) alpha <- 0.1  # Adaptive Simes (lambda-calibration) set.seed(542) res <- fit(obj, B = 100, alpha = alpha, family = \"Simes\") plot(res)  volcanoPlot(res, q = 0.05, r = 0.2)   # upper bound on number of signals if the entire data set # (and corresponding lower bound on FDP) predict(res) #>        TP       FDP  #> 29.000000  0.946593   # confidence curve plot(res)   # comparison to other confidence curves # Parametric Simes (no calibration -- assume positive dependence (PRDS)) res0 <- fit(obj, B = 0, alpha = alpha, family = \"Simes\") res0 #> 'SansSouci' object: #> \tNumber of hypotheses:\t 543  #> \tNumber of observations:\t 210  #> \t2-sample data #>  #> Truth:  #> \t 109 false null hypotheses (signals) out of 543 (pi0=0.799) #> Parameters:  #> \tTest function:\t\trowWelchTests #> \tNumber of permutations:\tB=0 #> \tSignificance level:\talpha=0.1 #> \tReference family:\tSimes #> \t\t(of size:\tK=543) #>  #> Output: #> \tCalibration parameter:\tlambda=0.1  # Oracle oracle <- fit(obj, alpha = alpha, family = \"Oracle\") oracle #> 'SansSouci' object: #> \tNumber of hypotheses:\t 543  #> \tNumber of observations:\t 210  #> \t2-sample data #>  #> Truth:  #> \t 109 false null hypotheses (signals) out of 543 (pi0=0.799) #> Parameters:  #> \tTest function:\t\trowWelchTests #> \tNumber of permutations:\tB=1000 #> \tSignificance level:\talpha=NA #> \tReference family:\tOracle #> \t\t(of size:\tK=543) #>  #> Output: #> \tCalibration parameter:\tlambda=NA  confs <- list(   Simes = predict(res0, all = TRUE),   \"Simes+calibration\" = predict(res, all = TRUE),   \"Oracle\" = predict(oracle, all = TRUE) ) plotConfCurve(confs)   if (FALSE) { # Use wilcoxon tests instead of Welch tests res <- fit(obj, B = 100, alpha = 0.1, rowTestFUN = rowWilcoxonTests) volcanoPlot(res, q = 0.05, r = 0.2) }"},{"path":"https://sanssouci-org.github.io/sanssouci/reference/SansSouciStruct-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Basic methods for class SansSouciStruct — SansSouciStruct-methods","title":"Basic methods for class SansSouciStruct — SansSouciStruct-methods","text":"Basic methods class SansSouciStruct nHyp: get number hypotheses nLeaves: get number leaves label Get label post hoc method pValues: get p-values","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/SansSouciStruct-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Basic methods for class SansSouciStruct — SansSouciStruct-methods","text":"","code":"# S3 method for SansSouciStruct nHyp(object)  # S3 method for SansSouciStruct nLeaves(object)  # S3 method for SansSouciStruct label(object)  # S3 method for SansSouciStruct pValues(object)"},{"path":"https://sanssouci-org.github.io/sanssouci/reference/SansSouciStruct-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Basic methods for class SansSouciStruct — SansSouciStruct-methods","text":"object object class SansSouci","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/SansSouciStruct-methods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Basic methods for class SansSouciStruct — SansSouciStruct-methods","text":"","code":"s <- 100 q <- 7 m <- s*2^q  obj <- SansSouciDyadic(m, leaf_size = s, direction = \"top-down\") nHyp(obj) #> [1] 12800 nLeaves(obj) #> [1] 128 mu <- gen.mu.leaves(m = m, K1 = 8, d = 0.9, grouped = TRUE,    setting = \"const\", barmu = 3, leaf_list = obj$input$leaves) pvalues <- gen.p.values(m = m, mu = mu, rho = 0)  alpha <- 0.05 res <- fit(obj, alpha, pvalues, \"DKWM\") label(res) #> [1] \"DKWM(tree)\" str(pValues(res)) #>  num [1:12800] 4.21e-05 3.03e-02 9.77e-02 3.03e-05 1.54e-05 ..."},{"path":"https://sanssouci-org.github.io/sanssouci/reference/SansSouciStruct.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an object of class 'SansSouciStruct' — SansSouciStruct","title":"Create an object of class 'SansSouciStruct' — SansSouciStruct","text":"Create object class 'SansSouciStruct'","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/SansSouciStruct.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an object of class 'SansSouciStruct' — SansSouciStruct","text":"","code":"SansSouciStruct(struct, leaves, truth = NULL)"},{"path":"https://sanssouci-org.github.io/sanssouci/reference/SansSouciStruct.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an object of class 'SansSouciStruct' — SansSouciStruct","text":"struct (dyadic) structure leaves list leaves truth optional numeric vector $m$ values $0,1$, status null hypothesis (0 means H0 true, 1 means H1 true). Typically used simulations.","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/SansSouciStruct.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an object of class 'SansSouciStruct' — SansSouciStruct","text":"object class 'SansSouciStruct'","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/SansSouciStruct.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Create an object of class 'SansSouciStruct' — SansSouciStruct","text":"Durand, G., Blanchard, G., Neuvial, P., & Roquain, E. (2020). Post hoc false positive control structured hypotheses. Scandinavian Journal Statistics, 47(4), 1114-1148.","code":""},{"path":[]},{"path":"https://sanssouci-org.github.io/sanssouci/reference/SansSouciStruct.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an object of class 'SansSouciStruct' — SansSouciStruct","text":"","code":"s <- 100 q <- 7 m <- s*2^q  dd <- dyadic.from.window.size(m, s, method = 2) obj <- SansSouciStruct(dd$C, dd$leaf_list)"},{"path":"https://sanssouci-org.github.io/sanssouci/reference/V.star.html","id":null,"dir":"Reference","previous_headings":"","what":"Post hoc bound on the number of false positives — V.star","title":"Post hoc bound on the number of false positives — V.star","text":"Computes post hoc upper bound \\(V^*(S)\\) number false positives given selection set \\(S\\) hypotheses, using reference family \\((R_k, \\zeta_k)\\) possess forest structure (see Reference).","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/V.star.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Post hoc bound on the number of false positives — V.star","text":"","code":"V.star(S, C, ZL, leaf_list)"},{"path":"https://sanssouci-org.github.io/sanssouci/reference/V.star.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Post hoc bound on the number of false positives — V.star","text":"S integer vector indices hypotheses selection set. need ordered. C list list representing forest structure. list C represents level depth forest structure. , C[[1]] lists regions depth 1, C[[2]] lists regions depth 2, . use fact region reference family union atom integer interval. elements list C[[]] integer vectors length 2 representing interval. example, C[[1]][[1]] = c(1, 5) means first region depth 1 union first 5 atoms, C[[2]][[3]] = c(4, 5) means third region depth 2 union atoms 4 5, C[[3]][[5]] = c(5, 5) means fifth region depth 3 simply fifth atom. ZL list integer vectors representing upper bound \\(\\zeta_k\\) associated region \\(R_k\\) reference family. ZL[[h]][j] \\(\\zeta_k\\) associated \\(R_k\\) described C[[h]][[j]]. leaf_list list vectors. vector integer array. -th vector contains indices hypotheses -th atom. Atoms form partition set hypotheses indices : overlap, index inside one atoms.","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/V.star.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Post hoc bound on the number of false positives — V.star","text":"integer value, post hoc upper bound \\(V^*(S)\\).","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/V.star.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Post hoc bound on the number of false positives — V.star","text":"V.star, forest structure need complete. , C, trivial intervals c(,) corresponding regions atoms may missing.","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/V.star.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Post hoc bound on the number of false positives — V.star","text":"Durand, G., Blanchard, G., Neuvial, P., & Roquain, E. (2020). Post hoc false positive control structured hypotheses. Scandinavian Journal Statistics, 47(4), 1114-1148.","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/V.star.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Post hoc bound on the number of false positives — V.star","text":"","code":"m <- 20 C <- list(   list(c(2, 5), c(8, 15), c(16, 19)),   list(c(3, 5), c(8, 10), c(12, 15), c(16, 16), c(17, 19)),   list(c(4, 5), c(8, 9), c(10, 10), c(12, 12), c(13, 15), c(17, 17), c(18, 19)),   list(c(8, 8), c(9, 9), c(13, 13), c(14, 15), c(18, 18), c(19, 19)) ) ZL <- list(   c(4, 8, 4),   c(3, 3, 4, 1, 3),   c(2, 2, 1, 1, 2, 1, 2),   c(1, 1, 1, 2, 1, 1) ) leaf_list <- as.list(1:m) V.star(1, C, ZL, leaf_list) #> [1] 1  V.star(1:5, C, ZL, leaf_list) #> [1] 5  V.star(13:15, C, ZL, leaf_list) #> [1] 2  V.star(1:m, C, ZL, leaf_list) #> [1] 19"},{"path":"https://sanssouci-org.github.io/sanssouci/reference/all-generics.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic functions for S3 class SansSouci — all-generics","title":"Generic functions for S3 class SansSouci — all-generics","text":"Generic functions S3 class SansSouci","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/all-generics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic functions for S3 class SansSouci — all-generics","text":"","code":"nHyp(object)  nObs(object)  label(object)  pValues(object)  foldChanges(object)  thresholds(object)  nLeaves(object)"},{"path":"https://sanssouci-org.github.io/sanssouci/reference/all-generics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic functions for S3 class SansSouci — all-generics","text":"object object. See individual methods specifics","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/all-generics.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Generic functions for S3 class SansSouci — all-generics","text":"nHyp(): ' Get number hypotheses nObs(): Get number observations label(): Get label hypotheses tested pValues(): Get p-values foldChanges(): Get fold changes thresholds(): Get thresholds nLeaves(): Get number leaves","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/calibrate.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform JER calibration from randomization p-values — calibrate","title":"Perform JER calibration from randomization p-values — calibrate","text":"Perform JER calibration randomization p-values","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/calibrate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform JER calibration from randomization p-values — calibrate","text":"","code":"calibrate(   p0,   m,   alpha,   family = c(\"Linear\", \"Beta\", \"Simes\"),   K = nrow(p0),   p = NULL,   max_steps_down = 10L,   piv_stat0 = NULL )  calibrate0(   p0,   m,   alpha,   family = c(\"Linear\", \"Beta\", \"Simes\"),   K = nrow(p0),   piv_stat0 = NULL )"},{"path":"https://sanssouci-org.github.io/sanssouci/reference/calibrate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform JER calibration from randomization p-values — calibrate","text":"p0 matrix B rows. row vector null p-values m total number tested hypotheses alpha numeric value [0,1], target (JER) risk family character value, name threshold family. one \"Linear\", \"Beta\" \"Simes\", \"Oracle\". \"Linear\" \"Simes\" families identical. K integer value [1,m], number elements reference family. Defaults m p vector 'm' p.values, used step-control. provided, single step control performed. max_steps_down numeric value, maximum number steps perform. Defaults 10 (algorithm generally converges 1 2 steps). piv_stat0 use! removed soon...","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/calibrate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform JER calibration from randomization p-values — calibrate","text":"list elements thr: numeric vector length K, estimated probability exists index k 1 K k-th maximum test statistics greater thr[k], less alpha piv_stat: vector B pivotal statitics lambda: numeric value, result calibration","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/calibrate.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Perform JER calibration from randomization p-values — calibrate","text":"'calibrate0' performs single step calibration, whereas 'calibrate' performs step-calibration. Hence output 'calibrate(..., max_steps_down = 0)' 'calibrate0(...)' identical","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/calibrate.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Perform JER calibration from randomization p-values — calibrate","text":"Blanchard, G., Neuvial, P., & Roquain, E. (2020). Post hoc confidence bounds false positives using reference families. Annals Statistics, 48(3), 1281-1303.","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/calibrate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform JER calibration from randomization p-values — calibrate","text":"","code":"set.seed(0xBEEF) m <- 50 sim <- gaussianSamples(m = m, rho = 0.3, n = 45,                         pi0 = 0.8, SNR = 3, prob = 0.5) Y <- sim$X groups <- sim$categ p <- rowWelchTests(Y, groups)$p.value  B <- 100 null_groups <- replicate(B, sample(groups)) p0 <- rowWelchTests(Y, null_groups)$p.value  calib0 <- calibrate0(p0, m, alpha = 0.1) # single step calib <- calibrate(p0, m, alpha = 0.1, p = p) calib$lambda >= calib0$lambda  #>  10%  #> TRUE   maxFP(p, calib$thr) #> [1] 45  if (FALSE) { # Gene expression data(expr_ALL, package = \"sanssouci.data\") X <- expr_ALL; rm(expr_ALL) groups <- ifelse(colnames(X) == \"BCR/ABL\", 1, 0) # map to 0/1  null_groups <- replicate(500, sample(groups)) perm <- rowWelchTests(X, null_groups) p0 <- perm$p.value  alpha <- 0.1 m <- nrow(X) p <- rowWelchTests(X, groups)$p.value calib_L <- calibrate(p0, m, alpha, family = \"Linear\") calib_B <- calibrate(p0, m, alpha, family = \"Beta\", K = 100)  ## post hoc bounds thr <- calib_L$thr minTP(p, thr)  ## lower bound on true positives   ## example of user selection: rejections of BH(0.05) procedure adjp <- p.adjust(p, method = \"BH\")  sel <- which(adjp < 0.05) length(sel)  minTP(p[sel], thr)  # confidence bound on the FDP FDP_bound <- sanssouci:::curveMaxFP(sort(p), thr)/seq(along = p) plot(head(FDP_bound, 300), t = 's',    xlab = \"Number of features\",   ylab = \"Upper bound on False Discovery Proportion\") }"},{"path":"https://sanssouci-org.github.io/sanssouci/reference/confCurveFromFam.html","id":null,"dir":"Reference","previous_headings":"","what":"Confidence bounds on the true/false positives among most significant items — confCurveFromFam","title":"Confidence bounds on the true/false positives among most significant items — confCurveFromFam","text":"Confidence bounds true/false positives among significant items","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/confCurveFromFam.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Confidence bounds on the true/false positives among most significant items — confCurveFromFam","text":"","code":"confCurveFromFam(   p.values,   refFamily,   param,   K = length(p.values),   what = c(\"TP\", \"FDP\") )"},{"path":"https://sanssouci-org.github.io/sanssouci/reference/confCurveFromFam.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Confidence bounds on the true/false positives among most significant items — confCurveFromFam","text":"p.values vector containing p-values m hypotheses, sorted increasingly refFamily character value, reference family used. either \"Simes\" (equivalenlty, \"Linear\"), \"Beta\", \"Oracle\". param numeric value vector parameters reference family. K JER control 1:K, ie joint control k-FWER, k <= K. Defaults m. character vector, names post hoc bounds computed, among: FP: Upper bound number false positives 'x' significant items TP: Lower bound number true positives 'x' significant items FDP: Upper bound proportion false positives 'x' significant items TP: Lower bound proportion true positives 'x' significant items. Defaults c(\"TP\", \"FDP\")","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/confCurveFromFam.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Confidence bounds on the true/false positives among most significant items — confCurveFromFam","text":"data.frame m rows 5 columns: x: Number significant items selected family: Matches input argument refFamily param: Matches argument param procedure: Label procedure, typically form 'refFamily(param)' bound: Value post hoc bound stat: Type post hoc bound, specified argument bound","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/confCurveFromFam.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Confidence bounds on the true/false positives among most significant items — confCurveFromFam","text":"param numeric value unless refFamily == \"Oracle\". latter case, `param`` boolean vector length m indicating whether null hypothesis true false.","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/confCurveFromFam.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Confidence bounds on the true/false positives among most significant items — confCurveFromFam","text":"Gilles Blanchard, Pierre Neuvial Etienne Roquain","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/confCurveFromFam.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Confidence bounds on the true/false positives among most significant items — confCurveFromFam","text":"","code":"# Generate Gaussian data and perform multiple tests sim <- gaussianSamples(m = 502, rho = 0.5, n = 100, pi0 = 0.8, SNR = 3, prob = 0.5) rwt <- rowWelchTests(sim$X, sim$categ, alternative = \"greater\")  # calculate, print, and plot confidence bound cb <- confCurveFromFam(rwt$p.value, refFamily = \"Simes\", param = 0.1) head(cb) #>   x      label stat bound #> 1 1 Simes(0.1)   TP     1 #> 2 2 Simes(0.1)   TP     2 #> 3 3 Simes(0.1)   TP     3 #> 4 4 Simes(0.1)   TP     4 #> 5 5 Simes(0.1)   TP     5 #> 6 6 Simes(0.1)   TP     6 plotConfCurve(cb, xmax = 200)"},{"path":"https://sanssouci-org.github.io/sanssouci/reference/curve.V.star.forest.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute a curve of post hoc bounds based on a reference family with forest structure — curve.V.star.forest","title":"Compute a curve of post hoc bounds based on a reference family with forest structure — curve.V.star.forest","text":"Computes post hoc upper bound \\(V^*(S_t)\\) number false positives given sequence selection sets \\(S_t\\) hypotheses, \\(S_t\\subset S_{t+1}\\) \\(|S_t| = t\\), using reference family \\((R_k, \\zeta_k)\\) possess forest structure (see References).","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/curve.V.star.forest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute a curve of post hoc bounds based on a reference family with forest structure — curve.V.star.forest","text":"","code":"curve.V.star.forest.naive(   perm,   C,   ZL,   leaf_list,   pruning = FALSE,   delete.gaps = FALSE )  curve.V.star.forest.fast(   perm,   C,   ZL,   leaf_list,   pruning = FALSE,   is.pruned = FALSE,   is.complete = FALSE,   delete.gaps = FALSE )"},{"path":"https://sanssouci-org.github.io/sanssouci/reference/curve.V.star.forest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute a curve of post hoc bounds based on a reference family with forest structure — curve.V.star.forest","text":"perm integer vector elements 1:m, different, size m (case permutation, hence name). set \\(S_t\\) represented perm[1:t]. C list list representing forest structure. See V.star() information. ZL list integer vectors representing upper bounds \\(\\zeta_k\\) forest structure. See V.star() information. leaf_list list vectors representing atoms forest structure. See V.star() information. pruning boolean, FALSE default. Whether prune forest (see pruning()) computing bounds. Ignored .pruned TRUE. delete.gaps boolean, FALSE default. TRUE, also delete gaps structure induced pruning, see delete.gaps(). Ignored pruning FALSE. .pruned boolean, FALSE default. TRUE, assumes forest structure already completed (see forest.completion()) pruned (see pruning()) skips completion step optional pruning step. Must set TRUE giving pruned forest, see Details. .complete boolean, FALSE default. TRUE, assumes forest structure already completed (see forest.completion()) skips completion step. Ignored .pruned TRUE.","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/curve.V.star.forest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute a curve of post hoc bounds based on a reference family with forest structure — curve.V.star.forest","text":"vector length length perm, t-th element \\(V^*(S_t)\\).","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/curve.V.star.forest.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute a curve of post hoc bounds based on a reference family with forest structure — curve.V.star.forest","text":"Two functions available curve.V.star.forest.naive Repeatedly calls V.star() \\(S_t\\), optimized time-consuming, used practice. curve.V.star.forest.fast fast optimized version leverage fact \\(S_{t+1}\\) union \\(S_t\\) single hypothesis index. algorithm needs work complete forest, version first completes forest (unless told forest already completed, see forest.completion()), completion fails input pruned forest (see pruning()), pruned forest given input, MUST said .pruned argument function skips completion (pruned forest given input must also complete).","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/curve.V.star.forest.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Compute a curve of post hoc bounds based on a reference family with forest structure — curve.V.star.forest","text":"Durand, G., Blanchard, G., Neuvial, P., & Roquain, E. (2020). Post hoc false positive control structured hypotheses. Scandinavian Journal Statistics, 47(4), 1114-1148. Durand G., preprint appear description pruning fast algorithm compute curve.","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/curve.V.star.forest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute a curve of post hoc bounds based on a reference family with forest structure — curve.V.star.forest","text":"","code":"m <- 20 C <- list(   list(c(2, 5), c(8, 15), c(16, 19)),   list(c(3, 5), c(8, 10), c(12, 15), c(16, 16), c(17, 19)),   list(c(4, 5), c(8, 9), c(10, 10), c(12, 12), c(13, 15), c(17, 17), c(18, 19)),   list(c(8, 8), c(9, 9), c(13, 13), c(14, 15), c(18, 18), c(19, 19)) ) ZL <- list(   c(4, 8, 4),   c(3, 3, 4, 1, 3),   c(2, 2, 1, 1, 2, 1, 2),   c(1, 1, 1, 2, 1, 1) ) leaf_list <- as.list(1:m) curve.V.star.forest.naive(1:m, C, ZL, leaf_list, pruning = FALSE) #>  [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 14 15 16 17 18 19  curve.V.star.forest.naive(1:m, C, ZL, leaf_list, pruning = TRUE) #>  [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 14 15 16 17 18 19  curve.V.star.forest.fast(1:m, C, ZL, leaf_list, pruning = FALSE) #>  [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 14 15 16 17 18 19  curve.V.star.forest.fast(1:m, C, ZL, leaf_list, pruning = TRUE) #>  [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 14 15 16 17 18 19"},{"path":"https://sanssouci-org.github.io/sanssouci/reference/curveMaxFP.html","id":null,"dir":"Reference","previous_headings":"","what":"Upper bound for the number of false discoveries among most significant items — curveMaxFP","title":"Upper bound for the number of false discoveries among most significant items — curveMaxFP","text":"Upper bound number false discoveries among significant items","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/curveMaxFP.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Upper bound for the number of false discoveries among most significant items — curveMaxFP","text":"","code":"curveMaxFP(p.values, thr)"},{"path":"https://sanssouci-org.github.io/sanssouci/reference/curveMaxFP.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Upper bound for the number of false discoveries among most significant items — curveMaxFP","text":"p.values vector containing s p-values thr vector \\(K\\) JER-controlling thresholds","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/curveMaxFP.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Upper bound for the number of false discoveries among most significant items — curveMaxFP","text":"vector size \\(s\\) giving joint upper confidence bound number false discoveries among \\(k\\) significant items \\(k \\\\{1\\ldots s\\}\\).","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/curveMaxFP.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Upper bound for the number of false discoveries among most significant items — curveMaxFP","text":"time space complexity function O(s), optimal since s length returned vector.","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/curveMaxFP.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Upper bound for the number of false discoveries among most significant items — curveMaxFP","text":"Enjalbert-Courrech, N. & Neuvial, P. (2022). Powerful interpretable control false discoveries two-group differential expression studies. Bioinformatics. doi: 10.1093/bioinformatcs/btac693","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/curveMaxFP.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Upper bound for the number of false discoveries among most significant items — curveMaxFP","text":"Gilles Blanchard, Nicolas Enjalbert-Courrech, Pierre Neuvial Etienne Roquain","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/curveMaxFP_alternatives.html","id":null,"dir":"Reference","previous_headings":"","what":"Upper bound for the number of false discoveries among most significant items — curveMaxFP_BNR2014","title":"Upper bound for the number of false discoveries among most significant items — curveMaxFP_BNR2014","text":"Upper bound number false discoveries among significant items","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/curveMaxFP_alternatives.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Upper bound for the number of false discoveries among most significant items — curveMaxFP_BNR2014","text":"","code":"curveMaxFP_BNR2014(p.values, thr)  curveMaxFP_Mein2006(p.values, thr)"},{"path":"https://sanssouci-org.github.io/sanssouci/reference/curveMaxFP_alternatives.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Upper bound for the number of false discoveries among most significant items — curveMaxFP_BNR2014","text":"p.values vector containing \\(m\\) p-values, sorted non-decreasingly thr vector \\(K\\) JER-controlling thresholds, sorted non-decreasingly","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/curveMaxFP_alternatives.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Upper bound for the number of false discoveries among most significant items — curveMaxFP_BNR2014","text":"vector size \\(m\\) giving joint upper confidence bound number false discoveries among \\(k\\) significant items \\(k \\\\{1\\ldots m\\}\\).","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/curveMaxFP_alternatives.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Upper bound for the number of false discoveries among most significant items — curveMaxFP_BNR2014","text":"older implementations 'curveMaxFP' purpose testing current one yields consistent results.","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/curveMaxFP_alternatives.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Upper bound for the number of false discoveries among most significant items — curveMaxFP_BNR2014","text":"Gilles Blanchard, Nicolas Enjalbert-Courrech, Pierre Neuvial Etienne Roquain","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/delete.gaps.html","id":null,"dir":"Reference","previous_headings":"","what":"Delete the gaps induced by pruning — delete.gaps","title":"Delete the gaps induced by pruning — delete.gaps","text":"small optimization can done pruning can speed computations (removes gaps introduced pruning)","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/delete.gaps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Delete the gaps induced by pruning — delete.gaps","text":"","code":"delete.gaps(C, ZL, leaf_list)"},{"path":"https://sanssouci-org.github.io/sanssouci/reference/delete.gaps.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Delete the gaps induced by pruning — delete.gaps","text":"C list list representing forest structure. See V.star() information. ZL list integer vectors representing upper bounds \\(\\zeta_k\\) forest structure. See V.star() information. leaf_list list vectors representing atoms forest structure. See V.star() information.","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/delete.gaps.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Delete the gaps induced by pruning — delete.gaps","text":"list two named elements. C new C deleting gaps. ZL new ZL deleting gaps.","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/delete.gaps.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Delete the gaps induced by pruning — delete.gaps","text":"See pruning(). code reviewed since 2023-07-25, use caution.","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/dyadic.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a complete dyadic tree structure — dyadic","title":"Create a complete dyadic tree structure — dyadic","text":"Produce set regions forest structure, single tree, dyadic.","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/dyadic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a complete dyadic tree structure — dyadic","text":"","code":"dyadic.from.leaf_list(leaf_list, method)  dyadic.from.window.size(m, s, method)  dyadic.from.height(m, H = NULL, method)"},{"path":"https://sanssouci-org.github.io/sanssouci/reference/dyadic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a complete dyadic tree structure — dyadic","text":"leaf_list list vectors representing atoms forest structure. See V.star() information. method numeric value. method == 1, start leaves group nodes height 2 2 long possible. method==2, start root divide nodes 2 nodes equal size long possible m integer value, number hypotheses structure s integer value, number elements atom/leaf H integer value, desired maximal height tree. NULL (default), use floor(2 + log2(m - 1)) gives maximum achievable height given m.","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/dyadic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a complete dyadic tree structure — dyadic","text":"list two named elements: leaf_list list vectors representing atoms forest structure. See V.star() information. C list list representing forest structure. See V.star() information.","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/dyadic.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a complete dyadic tree structure — dyadic","text":"dyadic..leaf_list Dyadic tree structure given list atoms/leafs dyadic..window.size Dyadic tree structure window size: number elements atom/leaf set s dyadic..height Dyadic tree structure height: total height tree set H","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/dyadic.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Create a complete dyadic tree structure — dyadic","text":"Durand, G., Blanchard, G., Neuvial, P., & Roquain, E. (2020). Post hoc false positive control structured hypotheses. Scandinavian Journal Statistics, 47(4), 1114-1148.","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/dyadic.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a complete dyadic tree structure — dyadic","text":"","code":"m <- 6 dd <- dyadic.from.window.size(m, s = 2, method = 2) str(dd) #> List of 2 #>  $ leaf_list:List of 3 #>   ..$ : num [1:2] 1 2 #>   ..$ : num [1:2] 3 4 #>   ..$ : num [1:2] 5 6 #>  $ C        :List of 3 #>   ..$ :List of 1 #>   .. ..$ : num [1:2] 1 3 #>   ..$ :List of 2 #>   .. ..$ : num [1:2] 1 2 #>   .. ..$ : num [1:2] 3 3 #>   ..$ :List of 3 #>   .. ..$ : num [1:2] 1 1 #>   .. ..$ : num [1:2] 2 2 #>   .. ..$ : num [1:2] 3 3  dd <- dyadic.from.height(m, H = 3, method = 2) str(dd) #> List of 2 #>  $ leaf_list:List of 4 #>   ..$ : num [1:2] 1 2 #>   ..$ : num [1:2] 3 4 #>   ..$ : num 5 #>   ..$ : num 6 #>  $ C        :List of 3 #>   ..$ :List of 1 #>   .. ..$ : num [1:2] 1 4 #>   ..$ :List of 2 #>   .. ..$ : num [1:2] 1 2 #>   .. ..$ : num [1:2] 3 4 #>   ..$ :List of 4 #>   .. ..$ : num [1:2] 1 1 #>   .. ..$ : num [1:2] 2 2 #>   .. ..$ : num [1:2] 3 3 #>   .. ..$ : num [1:2] 4 4  dd <- dyadic.from.height(m, method = 2) str(dd) #> List of 2 #>  $ leaf_list:List of 6 #>   ..$ : int 1 #>   ..$ : int 2 #>   ..$ : int 3 #>   ..$ : int 4 #>   ..$ : int 5 #>   ..$ : int 6 #>  $ C        :List of 4 #>   ..$ :List of 1 #>   .. ..$ : num [1:2] 1 6 #>   ..$ :List of 2 #>   .. ..$ : num [1:2] 1 3 #>   .. ..$ : num [1:2] 4 6 #>   ..$ :List of 4 #>   .. ..$ : num [1:2] 1 2 #>   .. ..$ : num [1:2] 3 3 #>   .. ..$ : num [1:2] 4 5 #>   .. ..$ : num [1:2] 6 6 #>   ..$ :List of 6 #>   .. ..$ : num [1:2] 1 1 #>   .. ..$ : num [1:2] 2 2 #>   .. ..$ : num [1:2] 3 3 #>   .. ..$ : num [1:2] 4 4 #>   .. ..$ : num [1:2] 5 5 #>   .. ..$ : num [1:2] 6 6  leaf_list <- dd$leaf_list dd <- dyadic.from.leaf_list(leaf_list, method = 2) str(dd) #> List of 2 #>  $ leaf_list:List of 6 #>   ..$ : int 1 #>   ..$ : int 2 #>   ..$ : int 3 #>   ..$ : int 4 #>   ..$ : int 5 #>   ..$ : int 6 #>  $ C        :List of 4 #>   ..$ :List of 1 #>   .. ..$ : num [1:2] 1 6 #>   ..$ :List of 2 #>   .. ..$ : num [1:2] 1 3 #>   .. ..$ : num [1:2] 4 6 #>   ..$ :List of 4 #>   .. ..$ : num [1:2] 1 2 #>   .. ..$ : num [1:2] 3 3 #>   .. ..$ : num [1:2] 4 5 #>   .. ..$ : num [1:2] 6 6 #>   ..$ :List of 6 #>   .. ..$ : num [1:2] 1 1 #>   .. ..$ : num [1:2] 2 2 #>   .. ..$ : num [1:2] 3 3 #>   .. ..$ : num [1:2] 4 4 #>   .. ..$ : num [1:2] 5 5 #>   .. ..$ : num [1:2] 6 6"},{"path":"https://sanssouci-org.github.io/sanssouci/reference/fit.SansSouci.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit SansSouci object — fit.SansSouci","title":"Fit SansSouci object — fit.SansSouci","text":"Fit SansSouci object","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/fit.SansSouci.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit SansSouci object — fit.SansSouci","text":"","code":"# S3 method for SansSouci fit(   object,   alpha,   B = 1000,   rowTestFUN = NULL,   alternative = c(\"two.sided\", \"less\", \"greater\"),   family = c(\"Simes\", \"Linear\", \"Beta\", \"Oracle\"),   max_steps_down = 10L,   K = nHyp(object),   force = FALSE,   verbose = FALSE,   ... )"},{"path":"https://sanssouci-org.github.io/sanssouci/reference/fit.SansSouci.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit SansSouci object — fit.SansSouci","text":"object object class SansSouci alpha numeric value [0,1], target (JER) risk B integer value, number permutations performed. Defaults 1000 rowTestFUN (vectorized) test function. Defaults rowWelchTests. alternative character string specifying alternative hypothesis. Must one \"two.sided\" (default), \"greater\" \"less\". family character value, name threshold family. one \"Linear\", \"Beta\" \"Simes\", \"Oracle\". \"Linear\" \"Simes\" families identical. Simes/Linear: classical family thresholds introduced Simes (1986). family yields JER control test statistics positively dependent (PRDS) H0. Beta: family thresholds achieves marginal kFWER control independence Oracle family associated bounds correspond true numbers/proportions true/false positives. \"truth\" must available object$input$truth. max_steps_down numeric value, maximum number steps perform. Defaults 10 (algorithm generally converges 1 2 steps). K integer value [1,m], number elements reference family. Defaults m force boolean value: permutation p-values pivotal statistics re-calculated ? Defaults FALSE verbose boolean value: extra info printed? Defaults FALSE ... used","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/fit.SansSouci.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit SansSouci object — fit.SansSouci","text":"'fitted' object class 'SansSouci'. list three elements input: see SansSouci param: input parameters, given list output: outputs calibration, see calibrate","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/fit.SansSouci.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit SansSouci object — fit.SansSouci","text":"","code":"# Generate Gaussian data and perform multiple tests obj <- SansSouciSim(m = 502, rho = 0.5, n = 100, pi0 = 0.8, SNR = 3, prob = 0.5) res <- fit(obj, B = 100, alpha = 0.1)  # confidence curve plot(res)   # confidence curve for a subset S <- which(pValues(res) < 0.1 & foldChanges(res) > 0.3) plot(res, S = S)   # plot two confidence curves res_beta <- fit(res, B = 100, alpha = 0.1, family = \"Beta\", K = 20)  resList <- list(\"Linear\" = res, \"Beta\" = res_beta) bounds <- lapply(resList, predict, all = TRUE) plotConfCurve(bounds, xmax = 200)"},{"path":"https://sanssouci-org.github.io/sanssouci/reference/fit.SansSouciStruct.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit SansSouciStruct object — fit.SansSouciStruct","title":"Fit SansSouciStruct object — fit.SansSouciStruct","text":"Fit SansSouciStruct object","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/fit.SansSouciStruct.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit SansSouciStruct object — fit.SansSouciStruct","text":"","code":"# S3 method for SansSouciStruct fit(   object,   alpha,   p.values,   family = c(\"DKWM\", \"HB\", \"trivial\", \"Simes\", \"Oracle\"),   flavor = c(\"tree\", \"partition\"),   ... )"},{"path":"https://sanssouci-org.github.io/sanssouci/reference/fit.SansSouciStruct.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit SansSouciStruct object — fit.SansSouciStruct","text":"object object class SansSouciStruct alpha Target risk (JER) level p.values vector length nHyp(object), family character value describing number true nulls set estimated. Can either: \"DKWM\": estimation Dvoretzky-Kiefer-Wolfowitz-Massart inequality (related Storey estimator proportion true nulls), valid independent p-values \"HB\": estimation Holm-Bonferroni method, always valid \"trivial\": dummy estimation size set \"Simes\": estimation via Simes inequality, valid positively-dependent (PRDS) p-values \"Oracle\": true number true null hypotheses Truth\" must available object$input$truth flavor character value can \"tree\" (default value): reference family entire tree structure \"partition\": reference family partition corresponding leaves tree ... used","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/fit.SansSouciStruct.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit SansSouciStruct object — fit.SansSouciStruct","text":"'fitted' object class 'SansSouciStruct'. list three elements input: see SansSouciStruct param: input parameters, given list output: list two elements p.values: input argument 'p.values' ZL: output \"zeta function\" associated input parameter 'family', see e.g. zeta.DKWM","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/fit.SansSouciStruct.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fit SansSouciStruct object — fit.SansSouciStruct","text":"particular case family==\"Simes\" family==\"Oracle\", return value actually class SansSouci SansSouciStruct","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/fit.SansSouciStruct.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fit SansSouciStruct object — fit.SansSouciStruct","text":"Durand, G., Blanchard, G., Neuvial, P., & Roquain, E. (2020). Post hoc false positive control structured hypotheses. Scandinavian Journal Statistics, 47(4), 1114-1148. Dvoretzky, ., Kiefer, J., Wolfowitz, J. (1956). Asymptotic minimax character sample distribution function classical multinomial estimator. Annals Mathematical Statistics, pages 642-669. Holm, S. simple sequentially rejective multiple test procedure. Scandinavian Journal Statistics 6 (1979), pp. 65-70. Massart, P. (1990). tight constant Dvoretzky-Kiefer-Wolfowitz inequality. Annals Probability, pages 1269-1283.","code":""},{"path":[]},{"path":"https://sanssouci-org.github.io/sanssouci/reference/fit.SansSouciStruct.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit SansSouciStruct object — fit.SansSouciStruct","text":"","code":"s <- 100 q <- 7 m <- s*2^q obj <- SansSouciDyadic(m, leaf_size = s, direction = \"top-down\")  mu <- gen.mu.leaves(m = m, K1 = 8, d = 0.9, grouped = TRUE,    setting = \"const\", barmu = 3, leaf_list = obj$input$leaves) pvalues <- gen.p.values(m = m, mu = mu, rho = 0)  alpha <- 0.05 S1 <- which(mu != 0)  res_DKWM <- fit(obj, alpha, pvalues, \"DKWM\") predict(res_DKWM, S = S1, what = \"FP\") #> [1] 348  res_Simes <- fit(obj, alpha, pvalues, \"Simes\") predict(res_Simes, S = S1, what = \"FP\") #> [1] 584"},{"path":"https://sanssouci-org.github.io/sanssouci/reference/forest.completion.html","id":null,"dir":"Reference","previous_headings":"","what":"Complete a forest structure — forest.completion","title":"Complete a forest structure — forest.completion","text":"Completes forest sens Reference: adds missing atoms/leafs reference family forest structure \\((R_k, \\zeta_k)\\) atom well represented \\(R_k\\). associated \\(\\zeta_k\\) taken trivial \\(|R_k|\\).","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/forest.completion.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Complete a forest structure — forest.completion","text":"","code":"forest.completion(C, ZL, leaf_list)"},{"path":"https://sanssouci-org.github.io/sanssouci/reference/forest.completion.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Complete a forest structure — forest.completion","text":"C list list representing forest structure. See V.star() information. ZL list integer vectors representing upper bounds \\(\\zeta_k\\) forest structure. See V.star() information. leaf_list list vectors representing atoms forest structure. See V.star() information.","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/forest.completion.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Complete a forest structure — forest.completion","text":"list two named elements. C new C completion. ZL new ZL completion.","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/forest.completion.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Complete a forest structure — forest.completion","text":"forest must pruned (pruning()) beforehand. code behave expectedly return wrong result pruned forest given input. Maybe function rewritten going leaves roots instead contrary, avoid issue.","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/forest.completion.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Complete a forest structure — forest.completion","text":"Durand, G., Blanchard, G., Neuvial, P., & Roquain, E. (2020). Post hoc false positive control structured hypotheses. Scandinavian Journal Statistics, 47(4), 1114-1148.","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/formatBounds.html","id":null,"dir":"Reference","previous_headings":"","what":"Table of bounds — formatBounds","title":"Table of bounds — formatBounds","text":"Table bounds","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/formatBounds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Table of bounds — formatBounds","text":"","code":"formatBounds(   max_FP,   idxs = seq_len(max_FP),   lab = NULL,   what = c(\"TP\", \"FDP\"),   all = FALSE )"},{"path":"https://sanssouci-org.github.io/sanssouci/reference/formatBounds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Table of bounds — formatBounds","text":"max_FP vector upper boud number False Discovery idxs vector indices selection lab label method used type quantities. c(\"FP\", \"TP\", \"FDP\", \"TDP\"). Boolean specify function return bounds tests","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/formatBounds.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Table of bounds — formatBounds","text":"data frame post hoc bounds","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/gauss_bloc.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a block of deterministic signal of Gaussian shape — gauss_bloc","title":"Generate a block of deterministic signal of Gaussian shape — gauss_bloc","text":"Generate block deterministic signal Gaussian shape","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/gauss_bloc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a block of deterministic signal of Gaussian shape — gauss_bloc","text":"","code":"gauss_bloc(barmu, len)"},{"path":"https://sanssouci-org.github.io/sanssouci/reference/gauss_bloc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a block of deterministic signal of Gaussian shape — gauss_bloc","text":"barmu numeric value, strength signal len integer value, length block","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/gauss_bloc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a block of deterministic signal of Gaussian shape — gauss_bloc","text":"numeric vector length len, signal values block","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/gaussianSamples.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate equi-correlated data — gaussianSamples","title":"Simulate equi-correlated data — gaussianSamples","text":"Simulate equi-correlated data coming one two populations","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/gaussianSamples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate equi-correlated data — gaussianSamples","text":"","code":"gaussianSamples(m, rho, n, pi0, SNR = 1, prob = 1, w = NULL)"},{"path":"https://sanssouci-org.github.io/sanssouci/reference/gaussianSamples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate equi-correlated data — gaussianSamples","text":"m Number hypotheses rho Level equi-correlation pairs variables n Number observations, .e. sample size pi0 Proportion true null hypotheses SNR Signal noise ratio. Either numeric value (measure distance H0 H1) vector length m*(1-pi0) prob numeric value (0, 1], frequency population H1. \\(prob=1\\) (default), data set single population generated. w optional vector length n, underlying factor driving equi-correlation","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/gaussianSamples.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate equi-correlated data — gaussianSamples","text":"list three elements: X \\(m x n\\) matrix \\(m\\)-dimensional Gaussian observations, \\(m1\\) rows H1, \\(m0\\) rows H0, \\(m0/m = pi0\\) categ numeric vector length \\(n\\) matching observation sample (0 1) H vector length \\(m\\), status hypothesis: 0 true null hypothesis, 1 true alternative hypothesis .","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/gaussianSamples.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simulate equi-correlated data — gaussianSamples","text":"prob = 1, \\(m_1\\) variables \\(H_1\\) mean \\(SNR/\\sqrt(n)\\). 0 < p < 1, \\(n_0\\) samples drawn \\(\\mathcal{N}(0,1)\\) distribution \\(n_1\\) drawn \\(\\mathcal{N}(\\mu, 1)\\) distribution, \\(\\mu =   SNR*\\sqrt(1/(n_0) + 1/n_1)\\). argument p probability sample belong non-zero-mean population.","code":""},{"path":[]},{"path":"https://sanssouci-org.github.io/sanssouci/reference/gaussianSamples.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Simulate equi-correlated data — gaussianSamples","text":"Gilles Blanchard, Pierre Neuvial Etienne Roquain","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/gaussianSamples.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate equi-correlated data — gaussianSamples","text":"","code":"m <- 23 rho <- 0.2 n <- 100 pi0 <- 0.5 B <- 1e3  ## two-sample data sim <- gaussianSamples(m, rho, n, pi0, SNR = 2, prob = 0.5) tests <- testByRandomization(sim$X, sim$categ, B = B)  ## show test statistics pch <- 20 colStat <- 1+sim$H plot(tests$T, col=colStat, main=\"Test statistics\", pch=pch) legend(\"topleft\", c(\"H0\", \"H1\"), pch=pch, col=1:2)   ## one-sample data sim <- gaussianSamples(m, rho, n, pi0, SNR=2) tests <- testByRandomization(sim$X, B = B)  ## show test statistics pch <- 20 colStat <- 1+sim$H plot(tests$T, col=colStat, main=\"Test statistics\", pch=pch) legend(\"topleft\", c(\"H0\", \"H1\"), pch=pch, col=1:2)"},{"path":"https://sanssouci-org.github.io/sanssouci/reference/gaussianTestStatistics.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate Gaussian test statistics — gaussianTestStatistics","title":"Simulate Gaussian test statistics — gaussianTestStatistics","text":"Simulate Gaussian test statistics","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/gaussianTestStatistics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate Gaussian test statistics — gaussianTestStatistics","text":"","code":"gaussianTestStatistics(   m,   B,   pi0 = 1,   SNR = 0,   dep = c(\"equi\", \"Toeplitz\"),   param = 0 )"},{"path":"https://sanssouci-org.github.io/sanssouci/reference/gaussianTestStatistics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate Gaussian test statistics — gaussianTestStatistics","text":"m Number hypotheses B Number simulations pi0 Proportion true null hypotheses SNR Signal noise ratio. Either numeric value (measure distance H0 H1) vector length m*(1-pi0) dep character value, type dependency test statistics. Can one \"equi\" equi-correlation, \"Toeplitz\". Defaults \"equi\". param numeric value defaulting 0. dep==\"equi\", param level equi-correlation pairs variables. dep==\"Toeplitz\", first row Toeplitz matrix (1:m)^(param).","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/gaussianTestStatistics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate Gaussian test statistics — gaussianTestStatistics","text":"list elements x vector length \\(m\\) test statistics X0 \\(m x B\\) matrix test statistics null hypothesis H vector length \\(m\\), status hypothesis: 0 true null hypothesis, 1 true alternative hypothesis","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/gaussianTestStatistics.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simulate Gaussian test statistics — gaussianTestStatistics","text":"B","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/gaussianTestStatistics.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Simulate Gaussian test statistics — gaussianTestStatistics","text":"Gilles Blanchard, Pierre Neuvial Etienne Roquain","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/gaussianTestStatistics.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate Gaussian test statistics — gaussianTestStatistics","text":"","code":"m <- 123 B <- 100  # independent statistics under the full null sim <- gaussianTestStatistics(m, B)  # equi-correlated statistics under the full null sim <- gaussianTestStatistics(m, B, dep = \"equi\", param = 0.2)  # equi-correlated statistics with some signal sim <- gaussianTestStatistics(m, B, pi0 = 0.8, SNR = 1, dep = \"equi\", param = 0.2)  ## show test statistics stat <- sim$x pch <- 20 colStat <- 1+sim$H plot(stat, col=colStat, main=\"Test statistics\", pch=pch) legend(\"topleft\", c(\"H0\", \"H1\"), pch=pch, col=1:2)   # Toeplitz statistics with some signal sim <- gaussianTestStatistics(m, B, pi0 = 0.8, SNR = 1, dep = \"Toeplitz\", param = -0.5)"},{"path":"https://sanssouci-org.github.io/sanssouci/reference/gen.mu.leaves.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the signal in the leaves of the tree — gen.mu.leaves","title":"Generate the signal in the leaves of the tree — gen.mu.leaves","text":"Generate signal leaves tree","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/gen.mu.leaves.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the signal in the leaves of the tree — gen.mu.leaves","text":"","code":"gen.mu.leaves(m, K1, d, grouped, setting, barmu, leaf_list)"},{"path":"https://sanssouci-org.github.io/sanssouci/reference/gen.mu.leaves.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the signal in the leaves of the tree — gen.mu.leaves","text":"m integer value, number hypotheses K1 integer value, number non-null leaves d numeric value \\([0,1]\\), proportion non-null signals non-null leaf grouped boolean value, whether non-null leaves contiguous setting character value specifying shape signal non-null leaf barmu numeric value, strength signal leaf_list list leaves generated dyadic..Nnn functions","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/gen.mu.leaves.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the signal in the leaves of the tree — gen.mu.leaves","text":"numeric vector length m, signal values hypothesis","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/gen.mu.leaves.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate the signal in the leaves of the tree — gen.mu.leaves","text":"setting == \"const\" non-null signal constant equal barmu. setting == \"gauss\" \\(d=1\\) signal active leaf shape Gaussian bell mean barmu, see gauss_bloc function generates . \\(d<1\\) shape randomly pruned. setting == \"poisson\" non-null signal randomly drawn according Poisson distribution mean barmu (slightly modified yield 0). setting == \"rgauss\" non-null signal randomly drawn according Normal distribution mean barmu variance barmu.","code":""},{"path":[]},{"path":"https://sanssouci-org.github.io/sanssouci/reference/gen.mu.leaves.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate the signal in the leaves of the tree — gen.mu.leaves","text":"","code":"m <- 160 s <- 10 K1 <- floor(m/(s * 4)) d <- 1 barmu <- 4 dd <- dyadic.from.window.size(m, s, method = 2) leaf_list <- dd$leaf_list muC <- gen.mu.leaves(m = m, K1 = K1, d = d, grouped = FALSE,                      setting = \"const\", barmu = barmu, leaf_list =leaf_list) muC <- gen.mu.leaves(m = m, K1 = K1, d = d, grouped = TRUE,                      setting = \"const\", barmu = barmu, leaf_list =leaf_list) muG <- gen.mu.leaves(m = m, K1 = K1, d = d, grouped = FALSE,                      setting = \"gauss\", barmu = barmu, leaf_list =leaf_list) muP <- gen.mu.leaves(m = m, K1 = K1, d = d, grouped = FALSE,                      setting = \"poisson\", barmu = barmu, leaf_list =leaf_list) mu <- cbind(constant = muC, Gaussian = muG, Poisson = muP) matplot(mu, t = 's')"},{"path":"https://sanssouci-org.github.io/sanssouci/reference/gen.mu.noleaves.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate an unstructured signal — gen.mu.noleaves","title":"Generate an unstructured signal — gen.mu.noleaves","text":"Generate unstructured signal","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/gen.mu.noleaves.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate an unstructured signal — gen.mu.noleaves","text":"","code":"gen.mu.noleaves(m, pi0, barmu)"},{"path":"https://sanssouci-org.github.io/sanssouci/reference/gen.mu.noleaves.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate an unstructured signal — gen.mu.noleaves","text":"m integer value, number hypotheses pi0 numeric value \\([0,1]\\), proportion true null signals barmu numeric value, strength signal","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/gen.mu.noleaves.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate an unstructured signal — gen.mu.noleaves","text":"numeric vector length m, signal values hypothesis","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/gen.mu.noleaves.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate an unstructured signal — gen.mu.noleaves","text":"","code":"m <- 100 pi0 <- 0.7 barmu <- 4 mu <- gen.mu.noleaves(m = m, pi0 = pi0, barmu = barmu)  plot(mu)"},{"path":"https://sanssouci-org.github.io/sanssouci/reference/gen.p.values.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate one-sided p-values associated to a given signal with equi-correlated noise — gen.p.values","title":"Generate one-sided p-values associated to a given signal with equi-correlated noise — gen.p.values","text":"Generate one-sided p-values associated given signal equi-correlated noise","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/gen.p.values.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate one-sided p-values associated to a given signal with equi-correlated noise — gen.p.values","text":"","code":"gen.p.values(   m,   mu = rep(0, m),   rho = 0,   alternative = c(\"two.sided\", \"less\", \"greater\") )"},{"path":"https://sanssouci-org.github.io/sanssouci/reference/gen.p.values.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate one-sided p-values associated to a given signal with equi-correlated noise — gen.p.values","text":"m integer value, number hypotheses mu vector \\(m\\) signal values rho numeric value \\([0,1]\\), level equi-correlation test statistics alternative character string specifying alternative hypothesis. Must one \"two.sided\" (default), \"greater\" \"less\".","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/gen.p.values.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate one-sided p-values associated to a given signal with equi-correlated noise — gen.p.values","text":"vector \\(m\\) one-sided \\(p\\)-values","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/gen.p.values.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate one-sided p-values associated to a given signal with equi-correlated noise — gen.p.values","text":"","code":"m <- 100 s <- 10 K1 <- floor(m/(s * 4)) d <- 1 barmu <- 4 dd <- dyadic.from.window.size(m, s, method = 2) leaf_list <- dd$leaf_list mu <- gen.mu.leaves(m = m, K1 = K1, d = d, grouped = FALSE,                      setting = \"const\", barmu = barmu, leaf_list =leaf_list) pvals <- gen.p.values(m = m, mu = mu, rho = 0) plot(-log(pvals), t = 'b')"},{"path":"https://sanssouci-org.github.io/sanssouci/reference/get_perm.html","id":null,"dir":"Reference","previous_headings":"","what":"Get permutation statistics and p-values — get_perm","title":"Get permutation statistics and p-values — get_perm","text":"Get matrix statistics p-values null hypothesis obtained repeated permutation class labels (two-sample tests)","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/get_perm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get permutation statistics and p-values — get_perm","text":"","code":"get_perm(   X,   categ,   B,   rowTestFUN = rowWelchTests,   alternative = c(\"two.sided\", \"less\", \"greater\") )"},{"path":"https://sanssouci-org.github.io/sanssouci/reference/get_perm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get permutation statistics and p-values — get_perm","text":"X matrix m variables (hypotheses) n observations categ numeric vector n values 0,1 specifying column indices first second samples. B integer value, number permutations performed rowTestFUN vectorized testing function (/O rowWelchTests) alternative character string specifying alternative hypothesis, passed rowTestFUN. Must one \"two.sided\" (default), \"greater\" \"less\".","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/get_perm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get permutation statistics and p-values — get_perm","text":"element 'p.value' output m x B matrix whose entry ,j corresponds p_{()}(g_j.X) notation AoS 2020 paper cited (section 4.5).","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/get_perm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get permutation statistics and p-values — get_perm","text":"","code":"m <- 50 n <- 45 X <- matrix(rnorm(m*n), ncol = n, nrow = m) categ <- rbinom(n, 1, 0.4)  B <- 10 set.seed(123) perm0 <- sanssouci:::get_perm(X, categ, B, rowWelchTests)  # for this particular test 'get_perm' can be bypassed set.seed(123) null_groups <- replicate(B, sample(categ)) perm <- rowWelchTests(X, null_groups) identical(perm0$p.value, perm$p.value) #> [1] FALSE identical(perm0$statistic, perm$statistic) #> [1] FALSE # Wilcoxon tests set.seed(123) perm0 <- sanssouci:::get_perm(X, categ, B, rowWilcoxonTests) perm <- rowWilcoxonTests(X, null_groups) identical(perm0$p.value, perm$p.value) #> [1] TRUE identical(perm0$statistic, perm$statistic) #> [1] TRUE"},{"path":"https://sanssouci-org.github.io/sanssouci/reference/get_pivotal_stat.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a vector of pivotal statistics associated to permutation p-values and to a reference family — get_pivotal_stat","title":"Get a vector of pivotal statistics associated to permutation p-values and to a reference family — get_pivotal_stat","text":"Get vector pivotal statistics associated permutation p-values reference family","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/get_pivotal_stat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a vector of pivotal statistics associated to permutation p-values and to a reference family — get_pivotal_stat","text":"","code":"get_pivotal_stat(p0, m, t_inv = t_inv_linear, K = nrow(p0))"},{"path":"https://sanssouci-org.github.io/sanssouci/reference/get_pivotal_stat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a vector of pivotal statistics associated to permutation p-values and to a reference family — get_pivotal_stat","text":"p0 matrix B rows. row vector null p-values m total number tested hypotheses t_inv inverse threshold function (/O 't_inv_linear') K integer value [1,m], number elements reference family. Defaults m","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/get_pivotal_stat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a vector of pivotal statistics associated to permutation p-values and to a reference family — get_pivotal_stat","text":"vector length B pivotal statitics, whose j-th entry corresponds psi(g_j.X) notation AoS 2020 paper cited (section 4.5)","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/get_pivotal_stat.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Get a vector of pivotal statistics associated to permutation p-values and to a reference family — get_pivotal_stat","text":"Blanchard, G., Neuvial, P., & Roquain, E. (2020). Post hoc confidence bounds false positives using reference families. Annals Statistics, 48(3), 1281-1303.","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/get_pivotal_stat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a vector of pivotal statistics associated to permutation p-values and to a reference family — get_pivotal_stat","text":"","code":"m <- 50 n <- 45 X <- matrix(rnorm(m*n), ncol = n, nrow = m) categ <- rbinom(n, 1, 0.4) B <- 10 null_groups <- replicate(B, sample(categ)) p0 <- rowWelchTests(X, null_groups)$p.value pivStat <- get_pivotal_stat(p0, m) quantile(pivStat, 0.2) #>       20%  #> 0.1741211"},{"path":"https://sanssouci-org.github.io/sanssouci/reference/maxFDP.html","id":null,"dir":"Reference","previous_headings":"","what":"Upper bound for the false discovery proportion in a selection — maxFDP","title":"Upper bound for the false discovery proportion in a selection — maxFDP","text":"Upper bound false discovery proportion selection","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/maxFDP.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Upper bound for the false discovery proportion in a selection — maxFDP","text":"","code":"maxFDP(p.values, thr)"},{"path":"https://sanssouci-org.github.io/sanssouci/reference/maxFDP.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Upper bound for the false discovery proportion in a selection — maxFDP","text":"p.values vector p-values selected items thr vector non-decreasing JER-controlling thresholds","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/maxFDP.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Upper bound for the false discovery proportion in a selection — maxFDP","text":"Upper bound proportion false discoveries selection","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/maxFP.html","id":null,"dir":"Reference","previous_headings":"","what":"Upper bound for the number of false discoveries in a selection — maxFP","title":"Upper bound for the number of false discoveries in a selection — maxFP","text":"Upper bound number false discoveries selection","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/maxFP.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Upper bound for the number of false discoveries in a selection — maxFP","text":"","code":"maxFP(p.values, thr)"},{"path":"https://sanssouci-org.github.io/sanssouci/reference/maxFP.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Upper bound for the number of false discoveries in a selection — maxFP","text":"p.values vector p-values selected items thr vector non-decreasing JER-controlling thresholds","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/maxFP.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Upper bound for the number of false discoveries in a selection — maxFP","text":"post hoc upper bound number false discoveries selection","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/maxFP.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Upper bound for the number of false discoveries in a selection — maxFP","text":"Blanchard, G., Neuvial, P., & Roquain, E. (2020). Post hoc confidence bounds false positives using reference families. Annals Statistics, 48(3), 1281-1303.","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/maxFP.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Upper bound for the number of false discoveries in a selection — maxFP","text":"","code":"m <- 123 sim <- gaussianSamples(m = m, rho = 0.2, n = 100,                         pi0 = 0.8, SNR = 3, prob = 0.5) X <- sim$X groups <- sim$categ p <- rowWelchTests(X, groups)$p.value  null_groups <- replicate(100, sample(groups)) p0 <- rowWelchTests(X, null_groups)$p.value calib <- calibrate(p0, m, alpha = 0.1) thr <- calib$thr  M0 <- maxFP(p, thr) M0/m #> [1] 0.8780488  sorted_p <- sort(p) maxFP(head(sorted_p, 20), thr) # some signal #> [1] 5 maxFP(tail(sorted_p), thr)     # no signal #> [1] 6 maxFP(c(head(sorted_p), tail(sorted_p)), thr) #> [1] 6"},{"path":"https://sanssouci-org.github.io/sanssouci/reference/minTDP.html","id":null,"dir":"Reference","previous_headings":"","what":"Lower bound for the true discovery proportion in a selection — minTDP","title":"Lower bound for the true discovery proportion in a selection — minTDP","text":"Lower bound true discovery proportion selection","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/minTDP.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Lower bound for the true discovery proportion in a selection — minTDP","text":"","code":"minTDP(p.values, thr)"},{"path":"https://sanssouci-org.github.io/sanssouci/reference/minTDP.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Lower bound for the true discovery proportion in a selection — minTDP","text":"p.values vector p-values selected items thr vector non-decreasing JER-controlling thresholds","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/minTDP.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Lower bound for the true discovery proportion in a selection — minTDP","text":"Lower bound proportion true discoveries selection","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/minTP.html","id":null,"dir":"Reference","previous_headings":"","what":"Lower bound for the number of true discoveries in a selection — minTP","title":"Lower bound for the number of true discoveries in a selection — minTP","text":"Lower bound number true discoveries selection","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/minTP.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Lower bound for the number of true discoveries in a selection — minTP","text":"","code":"minTP(p.values, thr)"},{"path":"https://sanssouci-org.github.io/sanssouci/reference/minTP.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Lower bound for the number of true discoveries in a selection — minTP","text":"p.values vector p-values selected items thr vector non-decreasing JER-controlling thresholds","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/minTP.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Lower bound for the number of true discoveries in a selection — minTP","text":"Lower bound number true discoveries selection","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/nb.elements.html","id":null,"dir":"Reference","previous_headings":"","what":"Number of unique regions in a reference family with forest structure — nb.elements","title":"Number of unique regions in a reference family with forest structure — nb.elements","text":"Number unique regions reference family forest structure","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/nb.elements.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Number of unique regions in a reference family with forest structure — nb.elements","text":"","code":"nb.elements(C)"},{"path":"https://sanssouci-org.github.io/sanssouci/reference/nb.elements.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Number of unique regions in a reference family with forest structure — nb.elements","text":"C list list representing forest structure. See V.star() information.","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/nb.elements.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Number of unique regions in a reference family with forest structure — nb.elements","text":"integer, number regions.","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/plot.SansSouci.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot confidence bound on the true/false positives among most significant items — plot.SansSouci","title":"Plot confidence bound on the true/false positives among most significant items — plot.SansSouci","text":"Plot confidence bound true/false positives among significant items","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/plot.SansSouci.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot confidence bound on the true/false positives among most significant items — plot.SansSouci","text":"","code":"# S3 method for SansSouci plot(x, y, xmax = nHyp(x), ...)"},{"path":"https://sanssouci-org.github.io/sanssouci/reference/plot.SansSouci.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot confidence bound on the true/false positives among most significant items — plot.SansSouci","text":"x object class 'SansSouci' y used xmax Right limit plot ... arguments passed bound","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/plot.SansSouci.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot confidence bound on the true/false positives among most significant items — plot.SansSouci","text":"","code":"# Generate Gaussian data and perform multiple tests obj <- SansSouciSim(m = 502, rho = 0.5, n = 100, pi0 = 0.8, SNR = 3, prob = 0.5) res <- fit(obj, B = 100, alpha = 0.1)  # confidence curve plot(res)   # confidence curve for a subset of hypotheses S <- which(pValues(res) < 0.1 & foldChanges(res) > 0.3) plot(res, S = S)"},{"path":"https://sanssouci-org.github.io/sanssouci/reference/plotConfCurve.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot confidence bound — plotConfCurve","title":"Plot confidence bound — plotConfCurve","text":"Plot confidence bound","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/plotConfCurve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot confidence bound — plotConfCurve","text":"","code":"plotConfCurve(conf_bound, xmax, cols = NULL)"},{"path":"https://sanssouci-org.github.io/sanssouci/reference/plotConfCurve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot confidence bound — plotConfCurve","text":"conf_bound data.frame list data.frames output predict xmax Right limit plot cols vector colors length conf_bound","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/plotConfCurve.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Plot confidence bound — plotConfCurve","text":"Blanchard, G., Neuvial, P., & Roquain, E. (2020). Post hoc confidence bounds false positives using reference families. Annals Statistics, 48(3), 1281-1303.","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/plotConfCurve.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot confidence bound — plotConfCurve","text":"","code":"# Generate Gaussian data and perform multiple tests obj <- SansSouciSim(m = 502, rho = 0.5, n = 100, pi0 = 0.8, SNR = 3, prob = 0.5) res <- fit(obj, B = 100, alpha = 0.1) cb <- predict(res, all = TRUE) plotConfCurve(cb, xmax = 200)  ## equivalent to 'plot(res, xmax = 200)'   # plot two confidence curves res_beta <- fit(res, B = 100, alpha = 0.1, family = \"Beta\", K = 20) cb_beta <- predict(res_beta, all = TRUE)  bounds <- list(\"Simes\"= cb,                  \"Beta\" = cb_beta) plotConfCurve(bounds, xmax = 200)"},{"path":"https://sanssouci-org.github.io/sanssouci/reference/posthocBySimes.html","id":null,"dir":"Reference","previous_headings":"","what":"post hoc bound obtained from Simes' inequality — posthocBySimes0Rcpp","title":"post hoc bound obtained from Simes' inequality — posthocBySimes0Rcpp","text":"Lower bound number correct rejections using Simes' reference family","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/posthocBySimes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"post hoc bound obtained from Simes' inequality — posthocBySimes0Rcpp","text":"","code":"posthocBySimes0Rcpp(p, select, alpha)  posthocBySimes(p, select, alpha, Rcpp = FALSE, verbose = FALSE)"},{"path":"https://sanssouci-org.github.io/sanssouci/reference/posthocBySimes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"post hoc bound obtained from Simes' inequality — posthocBySimes0Rcpp","text":"p numeric vector m p-values tested hypotheses. select vector indices \\([1, \\dots m]\\) hypotheses selected. alpha numeric value, significance level test procedure. Rcpp boolean value: use Rcpp version implementation? Defaults FALSE. verbose TRUE, prints verbose result screen. Defaults FALSE.","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/posthocBySimes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"post hoc bound obtained from Simes' inequality — posthocBySimes0Rcpp","text":"integer value, Simes's lower bound number correct rejections within selected hypotheses","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/posthocBySimes.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"post hoc bound obtained from Simes' inequality — posthocBySimes0Rcpp","text":"(R_k)_k provides jFWER control level \\(\\alpha\\) probability greater \\(1-\\alpha\\), \\(|H_0 cap R| \\leq \\min_k {|R \\cap (R_k)^c|+k-1}\\) bit better: \\(|H_0 cap R| \\leq (\\min_{k<= |R|} {|R \\cap R_k^c|+k-1}) \\wedge |R|\\)","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/posthocBySimes.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"post hoc bound obtained from Simes' inequality — posthocBySimes0Rcpp","text":"posthocBySimes0Rcpp(): Rcpp version posthocBySimes(): R version","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/posthocBySimes.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"post hoc bound obtained from Simes' inequality — posthocBySimes0Rcpp","text":"Blanchard, G., Neuvial, P., & Roquain, E. (2020). Post hoc confidence bounds false positives using reference families. Annals Statistics, 48(3), 1281-1303. Goeman, J. J., & Solari, . (2011). Multiple testing exploratory research. Statistical Science, 26(4), 584-597.","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/posthocBySimes.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"post hoc bound obtained from Simes' inequality — posthocBySimes0Rcpp","text":"Gilles Blanchard, Pierre Neuvial Etienne Roquain","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/posthocBySimes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"post hoc bound obtained from Simes' inequality — posthocBySimes0Rcpp","text":"","code":"m <- 1e3 m1 <- 200 p <- 1-pnorm(c(rnorm(m1, mean=4), rnorm(m-m1, mean=0))) R <- union(1:10, sample(m, 10)) alpha <- 0.10 if (require(\"cherry\")) {   hom <- hommelFast(p)   pickSimes(hom, R, silent=TRUE, alpha = alpha) } #> Loading required package: cherry #> [1] 7 posthocBySimes(p, R, alpha=alpha) #> [1] 7"},{"path":"https://sanssouci-org.github.io/sanssouci/reference/predict.SansSouci.html","id":null,"dir":"Reference","previous_headings":"","what":"Post hoc confidence bounds on the true/false positives — predict.SansSouci","title":"Post hoc confidence bounds on the true/false positives — predict.SansSouci","text":"Post hoc confidence bounds true/false positives","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/predict.SansSouci.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Post hoc confidence bounds on the true/false positives — predict.SansSouci","text":"","code":"# S3 method for SansSouci predict(   object,   S = seq_len(nHyp(object)),   what = c(\"TP\", \"FDP\"),   all = FALSE,   ... )"},{"path":"https://sanssouci-org.github.io/sanssouci/reference/predict.SansSouci.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Post hoc confidence bounds on the true/false positives — predict.SansSouci","text":"object object class 'SansSouci' S subset indices character vector, names post hoc bounds computed, among: FP: Upper bound number false positives 'x' significant items TP: Lower bound number true positives 'x' significant items FDP: Upper bound proportion false positives 'x' significant items TP: Lower bound proportion true positives 'x' significant items Defaults c(\"TP\", \"FDP\") logical value: bounds ordered subsets S returned? FALSE (default), bound S returned ... used","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/predict.SansSouci.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Post hoc confidence bounds on the true/false positives — predict.SansSouci","text":"FALSE (default), value bound returned. Otherwise, data.frame return, |S| rows 4 columns: x: Number significant items selected label: Label procedure, typically form 'family(param)' bound: Value post hoc bound stat: Type post hoc bound, specified argument bound.","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/predict.SansSouci.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Post hoc confidence bounds on the true/false positives — predict.SansSouci","text":"","code":"# Generate Gaussian data and perform multiple tests obj <- SansSouciSim(m = 502, rho = 0.5, n = 100, pi0 = 0.8, SNR = 3, prob = 0.5) res <- fit(obj, B = 100, alpha = 0.1)  # post hoc bound on the set of all hypotheses predict(res) #>         TP        FDP  #> 58.0000000  0.8844622   # idem for all possible subsets (sorted by p-value) bounds <- predict(res, all = TRUE) head(bounds) #>   x label stat bound #> 1 1 Simes   TP     1 #> 2 2 Simes   TP     2 #> 3 3 Simes   TP     3 #> 4 4 Simes   TP     4 #> 5 5 Simes   TP     5 #> 6 6 Simes   TP     6  # post hoc bound on a subset S <- which(pValues(res) < 0.01) predict(res, S) #>         TP        FDP  #> 58.0000000  0.3333333"},{"path":"https://sanssouci-org.github.io/sanssouci/reference/pruning.html","id":null,"dir":"Reference","previous_headings":"","what":"Prune a forest structure to speed up computations — pruning","title":"Prune a forest structure to speed up computations — pruning","text":"pruned forest structure makes computation V.star(), curve.V.star.forest.naive() curve.V.star.forest.fast() faster.","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/pruning.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prune a forest structure to speed up computations — pruning","text":"","code":"pruning(C, ZL, leaf_list, prune.leafs = FALSE, delete.gaps = FALSE)"},{"path":"https://sanssouci-org.github.io/sanssouci/reference/pruning.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prune a forest structure to speed up computations — pruning","text":"C list list representing forest structure. See V.star() information. ZL list integer vectors representing upper bounds \\(\\zeta_k\\) forest structure. See V.star() information. leaf_list list vectors representing atoms forest structure. See V.star() information. prune.leafs boolean, FALSE default. TRUE, also prune atoms/leafs \\(\\zeta_k \\geq |R_k|\\), makes computation V.star() curve.V.star.forest.naive() even faster used curve.V.star.forest.fast() needs structure complete (.e., atoms). default option FALSE. delete.gaps boolean, FALSE default. TRUE, also delete gaps structure induced pruning, see delete.gaps().","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/pruning.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prune a forest structure to speed up computations — pruning","text":"list three named elements. VstarNm \\(V^*(\\mathbb N_m)\\) computed -product algorithm, might well return . C new C pruning. ZL new ZL pruning.","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/pruning.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Prune a forest structure to speed up computations — pruning","text":"Durand, G., Blanchard, G., Neuvial, P., & Roquain, E. (2020). Post hoc false positive control structured hypotheses. Scandinavian Journal Statistics, 47(4), 1114-1148. Durand G., preprint appear description pruning","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. generics fit","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/reference-families.html","id":null,"dir":"Reference","previous_headings":"","what":"Reference families — reference-families","title":"Reference families — reference-families","text":"Reference families","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/reference-families.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reference families — reference-families","text":"","code":"t_inv_linear(y, k, m)  t_linear(alpha, k, m)  t_inv_beta(y, k, m)  t_beta(alpha, k, m)"},{"path":"https://sanssouci-org.github.io/sanssouci/reference/reference-families.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reference families — reference-families","text":"y numeric value k integer value [1,m] m integer value alpha numeric value (0,1)","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/reference-families.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reference families — reference-families","text":"","code":"m <- 10 alpha <- 0.05 thr <- t_linear(alpha, 1:m, m) t_inv_linear(thr[3], 3, m) #> [1] 0.05  thr <- t_beta(alpha, 1:m, m) t_inv_beta(thr[3], 3, m) #> [1] 0.05"},{"path":"https://sanssouci-org.github.io/sanssouci/reference/rowBinomialTests.html","id":null,"dir":"Reference","previous_headings":"","what":"Binomial proportion tests for each row of a matrix — rowBinomialTests","title":"Binomial proportion tests for each row of a matrix — rowBinomialTests","text":"Binomial proportion tests row matrix","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/rowBinomialTests.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Binomial proportion tests for each row of a matrix — rowBinomialTests","text":"","code":"rowBinomialTests(   mat,   categ,   alternative = c(\"two.sided\", \"less\", \"greater\"),   warn = TRUE )"},{"path":"https://sanssouci-org.github.io/sanssouci/reference/rowBinomialTests.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Binomial proportion tests for each row of a matrix — rowBinomialTests","text":"mat numeric matrix whose rows correspond variables columns observations categ Either numeric vector n categories \\(0, 1\\) observations, n x B matrix stacking B vectors (typically permutations original vector size n) alternative character string specifying alternative hypothesis. Must one \"two.sided\" (default), \"greater\" \"less\". binom.test, alternative = \"greater\" alternative class 1 shifted right class 0. warn boolean value indicating whether issue warning alternative==\"two-sided\". Defaults TRUE.","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/rowBinomialTests.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Binomial proportion tests for each row of a matrix — rowBinomialTests","text":"list containing following components: statistic value statistics p.value p-values tests estimate difference observed group proportions elements matrix size nrow(mat) x B, coerced vector length nrow(mat) B=1","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/rowBinomialTests.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Binomial proportion tests for each row of a matrix — rowBinomialTests","text":"Note return element 'estimate' inconsistent element 'estimate' returned 'binomial.test', \"estimated probability success\". find sensible return estimate effect size (e.g. done 't.test'))","code":""},{"path":[]},{"path":"https://sanssouci-org.github.io/sanssouci/reference/rowBinomialTests.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Binomial proportion tests for each row of a matrix — rowBinomialTests","text":"Gilles Blanchard, Pierre Neuvial Etienne Roquain","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/rowBinomialTests.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Binomial proportion tests for each row of a matrix — rowBinomialTests","text":"","code":"alt <- c(\"two.sided\", \"less\", \"greater\")[1]  p <- 100 n0 <- 60; n1 <- 40 mat0 <- matrix(rbinom(p*n0, size = 1, prob = 0.05), ncol = n0) mat1 <- matrix(rbinom(p*n1, size = 1, prob = 0.02), ncol = n1) mat <- cbind(mat0, mat1) cls <- rep(c(0, 1), times = c(n0, n1)) fbt <- rowBinomialTests(mat, categ = cls, alternative = alt) #> Warning: Two-sided p-value not vectorized yet! Looping for now. str(fbt) #> List of 3 #>  $ statistic: num [1:100] 2 1 1 1 1 1 0 0 3 0 ... #>  $ p.value  : num [1:100] 1 1 0.5201 0.0819 0.4895 ... #>  $ estimate : num [1:100] 0 -0.00833 -0.04167 -0.09167 0.00833 ...  # compare with ordinary binom.test: pbt <- t(sapply(1:p, FUN=function(ii) {   x1 <- mat[ii, cls==1]   x0 <- mat[ii, cls==0]   bt <- binom.test(sum(x1), length(x1), mean(x0), alternative = alt)   c(statistic = bt[[\"statistic\"]], p.value = bt[[\"p.value\"]]) })) all(abs(fbt$p.value-pbt[, \"p.value\"]) < 1e-10)  ## same results #> [1] TRUE all(abs(fbt$statistic-pbt[, \"statistic.number of successes\"]) < 1e-10)  ## same results #> [1] TRUE"},{"path":"https://sanssouci-org.github.io/sanssouci/reference/rowPearsonCorrelationTests.html","id":null,"dir":"Reference","previous_headings":"","what":"Pearson's correlation test for rows of a matrix — rowPearsonCorrelationTests","title":"Pearson's correlation test for rows of a matrix — rowPearsonCorrelationTests","text":"Pearson's correlation test rows matrix","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/rowPearsonCorrelationTests.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pearson's correlation test for rows of a matrix — rowPearsonCorrelationTests","text":"","code":"rowPearsonCorrelationTests(X, categ, alternative = \"two.sided\")"},{"path":"https://sanssouci-org.github.io/sanssouci/reference/rowPearsonCorrelationTests.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pearson's correlation test for rows of a matrix — rowPearsonCorrelationTests","text":"X m x n numeric matrix whose rows correspond variables columns observations categ Either numeric vector continuous covariate observations alternative character string specifying alternative hypothesis. Must one \"two.sided\" (default), \"greater\" \"less\". t.test, alternative = \"greater\" alternative class 1 larger mean class 0.","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/rowPearsonCorrelationTests.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pearson's correlation test for rows of a matrix — rowPearsonCorrelationTests","text":"list containing following components: statistic value t-statistics parameter degrees freedom t-statistics p.value p-values tests estimate correlation elements matrix size m x B, coerced vector length m B=1","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/rowPearsonCorrelationTests.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Pearson's correlation test for rows of a matrix — rowPearsonCorrelationTests","text":"function wrapper around row_cor_pearson function 'matrixTests' package.","code":""},{"path":[]},{"path":"https://sanssouci-org.github.io/sanssouci/reference/rowPearsonCorrelationTests.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Pearson's correlation test for rows of a matrix — rowPearsonCorrelationTests","text":"Nicolas Enjalbert Courrech","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/rowPearsonCorrelationTests.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pearson's correlation test for rows of a matrix — rowPearsonCorrelationTests","text":"","code":"m <- 300 n <- 38 mat <- matrix(rnorm(m*n), ncol=n) categ <- rnorm(n, mean = 10) system.time(fwt <- rowPearsonCorrelationTests(mat, categ, alternative = \"greater\")) #>    user  system elapsed  #>   0.003   0.000   0.003  str(fwt) #> List of 3 #>  $ p.value  : num [1:300] 0.746 0.11 0.813 0.784 0.162 ... #>  $ statistic: num [1:300] -0.67 1.246 -0.9 -0.796 1.002 ... #>  $ estimate : num [1:300] -0.111 0.203 -0.148 -0.132 0.165 ..."},{"path":"https://sanssouci-org.github.io/sanssouci/reference/rowWelchTests.html","id":null,"dir":"Reference","previous_headings":"","what":"Welch T-tests for rows of a matrix — rowWelchTests","title":"Welch T-tests for rows of a matrix — rowWelchTests","text":"Welch T-tests rows matrix","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/rowWelchTests.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Welch T-tests for rows of a matrix — rowWelchTests","text":"","code":"rowWelchTests(X, categ, alternative = c(\"two.sided\", \"less\", \"greater\"))"},{"path":"https://sanssouci-org.github.io/sanssouci/reference/rowWelchTests.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Welch T-tests for rows of a matrix — rowWelchTests","text":"X m x n numeric matrix whose rows correspond variables columns observations categ Either numeric vector n categories \\(0, 1\\) observations, n x B matrix stacking B vectors (typically permutations original vector size n) alternative character string specifying alternative hypothesis. Must one \"two.sided\" (default), \"greater\" \"less\". t.test, alternative = \"greater\" alternative class 1 larger mean class 0.","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/rowWelchTests.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Welch T-tests for rows of a matrix — rowWelchTests","text":"list containing following components: statistic value t-statistics parameter degrees freedom t-statistics p.value p-values tests estimate mean difference groups elements matrix size m x B, coerced vector length m B=1","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/rowWelchTests.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Welch T-tests for rows of a matrix — rowWelchTests","text":"function performs m x B Welch T tests n observations using matrix operations. time complexity O(mBn). code much faster using loops 'apply' functions, especially high-dimensional problems (small n large m) overhead call 't.test' function avoided code vectorized","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/rowWelchTests.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Welch T-tests for rows of a matrix — rowWelchTests","text":"B. L. Welch (1951), comparison several mean values: alternative approach. Biometrika, 38, 330-336","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/rowWelchTests.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Welch T-tests for rows of a matrix — rowWelchTests","text":"Pierre Neuvial","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/rowWelchTests.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Welch T-tests for rows of a matrix — rowWelchTests","text":"","code":"m <- 300 n <- 38 mat <- matrix(rnorm(m * n), ncol = n) categ <- rep(c(0, 1), times = c(27, n - 27)) system.time(fwt <- rowWelchTests(mat, categ, alternative = \"greater\")) #>    user  system elapsed  #>   0.003   0.001   0.001  str(fwt) #> List of 4 #>  $ statistic: num [1:300] 0.0104 1.6174 -0.1244 0.9773 0.9468 ... #>  $ parameter: num [1:300] 15.1 23.1 22.6 21.4 25.4 ... #>  $ p.value  : num [1:300] 0.4959 0.0597 0.5489 0.1697 0.1763 ... #>  $ estimate : num [1:300] 0.00387 0.577 -0.04127 0.35439 0.26165 ...  # compare with ordinary t.test: system.time(pwt <- apply(mat, 1, FUN = function(x) {   t.test(x[categ == 1], x[categ == 0], alternative = \"greater\")$p.value })) #>    user  system elapsed  #>   0.035   0.000   0.035  all(abs(fwt$p.value - pwt) < 1e-10) ## same results #> [1] TRUE  # with several contrasts/permutations B <- 100 categ_perm <- replicate(B, sample(categ)) system.time(fwt_perm <- rowWelchTests(mat, categ_perm, alternative = \"greater\")) #>    user  system elapsed  #>   0.024   0.028   0.013  str(fwt_perm) #> List of 4 #>  $ statistic: num [1:300, 1:100] 0.251 0.662 -0.916 1.41 0.188 ... #>  $ parameter: num [1:300, 1:100] 22.8 31.6 26.5 17.8 22.1 ... #>  $ p.value  : num [1:300, 1:100] 0.402 0.2565 0.8159 0.0879 0.4265 ... #>  $ estimate : num [1:300, 1:100] 0.0764 0.213 -0.2829 0.5479 0.0553 ..."},{"path":"https://sanssouci-org.github.io/sanssouci/reference/rowWilcoxonTests.html","id":null,"dir":"Reference","previous_headings":"","what":"Wilcoxon rank sum tests for each row of a matrix — rowWilcoxonTests","title":"Wilcoxon rank sum tests for each row of a matrix — rowWilcoxonTests","text":"Wilcoxon rank sum tests row matrix","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/rowWilcoxonTests.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wilcoxon rank sum tests for each row of a matrix — rowWilcoxonTests","text":"","code":"rowWilcoxonTests(   mat,   categ,   alternative = c(\"two.sided\", \"less\", \"greater\"),   correct = TRUE )"},{"path":"https://sanssouci-org.github.io/sanssouci/reference/rowWilcoxonTests.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wilcoxon rank sum tests for each row of a matrix — rowWilcoxonTests","text":"mat m x n numeric matrix whose rows correspond variables columns observations categ Either numeric vector n categories \\(0, 1\\) observations, n x B matrix stacking B vectors (typically permutations original vector size n) alternative character string specifying alternative hypothesis. Must one \"two.sided\" (default), \"greater\" \"less\". wilcox.test, alternative = \"greater\" alternative class 1 shifted right class 0. correct logical indicating whether apply continuity correction normal approximation p-value.","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/rowWilcoxonTests.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Wilcoxon rank sum tests for each row of a matrix — rowWilcoxonTests","text":"list containing following components: statistic value statistics p.value p-values tests list containing following components: statistic value statistics p.value p-values tests estimate median difference groups (calculated B=1 computational efficiency) elements matrix size m x B, coerced vector length m B=1","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/rowWilcoxonTests.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Wilcoxon rank sum tests for each row of a matrix — rowWilcoxonTests","text":"function performs m x B Wilcoxon T tests n observations. vectorized along rows mat. makes code much faster using loops 'apply' functions, especially high-dimensional problems (small n large m) overhead call 'wilcox.test' function avoided. Note vectorized along columns categ (), basic '' loop used. p-values computed using normal approximation described wilcox.test function. exact p-values (can useful small samples ties) implemented (yet). simplicity, 'estimate' returns difference group medians, match component 'estimate' output wilcox.test","code":""},{"path":[]},{"path":"https://sanssouci-org.github.io/sanssouci/reference/rowWilcoxonTests.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Wilcoxon rank sum tests for each row of a matrix — rowWilcoxonTests","text":"Gilles Blanchard, Pierre Neuvial Etienne Roquain","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/rowWilcoxonTests.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Wilcoxon rank sum tests for each row of a matrix — rowWilcoxonTests","text":"","code":"p <- 200 n <- 50 mat <- matrix(rnorm(p*n), ncol = n) cls <- rep(c(0, 1), each = n/2)  stats <- rowWilcoxonTests(mat, categ = cls, alternative = \"two.sided\") str(stats) #> List of 3 #>  $ p.value  : num [1:200] 0.2948 0.1302 0.0199 0.5347 0.3933 ... #>  $ statistic: num [1:200] 367 234 433 280 357 237 279 301 336 268 ... #>  $ estimate : num [1:200] 0.674 -0.453 0.76 -0.368 0.401 ...  # permutation of class labels cls_perm <- replicate(11, sample(cls)) stats <- rowWilcoxonTests(mat, categ = cls_perm, alternative = \"two.sided\") str(stats) #> List of 3 #>  $ p.value  : num [1:200, 1:11] 0.3517 0.3517 0.0877 0.8159 0.3721 ... #>  $ statistic: num [1:200, 1:11] 361 264 401 325 266 260 322 354 301 308 ... #>  $ estimate : num [1:200, 1:11] NA NA NA NA NA NA NA NA NA NA ...  # several unrelated contrasts cls2 <- cls cls[1:10] <- 1 # varying nx, ny cls_mat <- cbind(cls, cls2) stats <- rowWilcoxonTests(mat, categ = cls_mat, alternative = \"two.sided\") str(stats) #> List of 3 #>  $ p.value  : num [1:200, 1:2] 0.5116 0.7189 0.0944 0.1441 0.3739 ... #>   ..- attr(*, \"dimnames\")=List of 2 #>   .. ..$ : NULL #>   .. ..$ : chr [1:2] \"cls\" \"cls2\" #>  $ statistic: num [1:200, 1:2] 294 245 342 193 305 173 223 294 163 268 ... #>   ..- attr(*, \"dimnames\")=List of 2 #>   .. ..$ : NULL #>   .. ..$ : chr [1:2] \"cls\" \"cls2\" #>  $ estimate : num [1:200, 1:2] NA NA NA NA NA NA NA NA NA NA ..."},{"path":"https://sanssouci-org.github.io/sanssouci/reference/rowZTests.html","id":null,"dir":"Reference","previous_headings":"","what":"Z tests for rows of a matrix — rowZTests","title":"Z tests for rows of a matrix — rowZTests","text":"Z tests rows matrix","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/rowZTests.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Z tests for rows of a matrix — rowZTests","text":"","code":"rowZTests(mat, categ, alternative)"},{"path":"https://sanssouci-org.github.io/sanssouci/reference/rowZTests.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Z tests for rows of a matrix — rowZTests","text":"mat numeric matrix whose rows correspond m variables columns n observations categ Either numeric vector n values \\(-1, 1\\) perform sign flips, n x B matrix stacking B vectors. missing, coerced rep(1, n) alternative character string specifying alternative hypothesis. Must one \"two.sided\" (default), \"greater\" \"less\". Alternative =  \"greater\" corresponds positive mean.","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/rowZTests.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Z tests for rows of a matrix — rowZTests","text":"list containing following components: statistic value statistics p.value p-values tests elements matrix size nrow(mat) x B, coerced vector length nrow(mat) B=1","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/rowZTests.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Z tests for rows of a matrix — rowZTests","text":"Pierre Neuvial","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/rowZTests.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Z tests for rows of a matrix — rowZTests","text":"","code":"p <- 1e4+1 n <- 380 mat <- matrix(rnorm(p*n, mean = 1), ncol=n) zt <- rowZTests(mat, alternative = \"greater\") str(zt) #> List of 2 #>  $ statistic: num [1:10001, 1] 19 19.9 20.1 18.3 20.4 ... #>  $ p.value  : num [1:10001, 1] 7.16e-81 5.19e-88 2.09e-90 4.06e-75 8.69e-93 ...  # compare with apply version: p <- apply(mat, 1, FUN=function(x) {    stat <- sum(x)/sqrt(length(x))    pnorm(stat, lower.tail = FALSE) }) all(abs(zt$p.value - p) < 1e-10)  ## same results #> [1] TRUE  # Sign flipping B <- 10 eps <- replicate(B, rbinom(n, 1, 0.5)*2 - 1)  ## Rademacher zt_perm <- rowZTests(mat, eps, alternative = \"greater\") str(zt_perm) #> List of 2 #>  $ statistic: num [1:10001, 1:10] 0.088 0.432 -1.089 -0.414 -0.199 ... #>  $ p.value  : num [1:10001, 1:10] 0.465 0.333 0.862 0.661 0.579 ..."},{"path":"https://sanssouci-org.github.io/sanssouci/reference/testByRandomization.html","id":null,"dir":"Reference","previous_headings":"","what":"Randomization-based testing — testByRandomization","title":"Randomization-based testing — testByRandomization","text":"Randomization-based testing using permutation sign-flipping","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/testByRandomization.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Randomization-based testing — testByRandomization","text":"","code":"testByRandomization(   X,   categ,   B,   alternative = c(\"two.sided\", \"less\", \"greater\"),   rowTestFUN = rowWelchTests,   rand.p.value = FALSE )"},{"path":"https://sanssouci-org.github.io/sanssouci/reference/testByRandomization.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Randomization-based testing — testByRandomization","text":"X matrix m variables n observations categ optional numeric vector \\(n\\) values \\(0, 1\\) specifying column indices first second samples. provided, one-sample test performed. B numeric value, number permutations performed alternative character string specifying alternative hypothesis. Must one \"two.sided\" (default), \"greater\" \"less\". rowTestFUN (vectorized) test function used two-sample case. Defaults rowWelchTests rand.p.value boolean value: randomization \\(p\\)-values calculated returned? Defaults @FALSE","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/testByRandomization.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Randomization-based testing — testByRandomization","text":"list elements: T vector \\(m\\) test statistics T0 \\(m \\times B\\) matrix randomized test statistics p vector \\(m\\) parametric \\(p\\)-values p0 \\(m \\times B\\) matrix parametric \\(p\\)-values randomized data flavor character value, type randomization performed: \"perm\" permutation-based randomization two-sample tests, \"flip\" sign-flipping-based randomization one sample tests. See Details. rand.p vector \\(m\\) \\(p\\)-values (rand.p.value TRUE ) rand \\(m \\times B\\) matrix randomization \\(p\\)-values (rand.p.value TRUE )","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/testByRandomization.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Randomization-based testing — testByRandomization","text":"type randomization determined column names X. column names exactly two distinct values, corresponding columns interpreted two samples two-sample permutation-based test  performed (flavor \"perm\"). Otherwise (including X column names), one-sample test performed using sign-flipping (flavor \"flip\"). permutation, test null hypothesis: \"groups mean\" alternative specified parameter alternative. default, test Welch's two-sample test unequal variances, tests may used via argument rowTestFUN.  Permuted test statistics calculated B permutations group labels. Corresponding observed permuted p-values calculated proportion permutations (including identity) permuted test statistic larger observed test statistic. sign-flipping, test null hypothesis: \"mean 0\" alternative specified parameter alternative. use (rescaled) empirical mean observations test statistic. Sign-flipped test statistics calculated flipping sign observation probability 1/2.","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/testByRandomization.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Randomization-based testing — testByRandomization","text":"Ge, Y., Dudoit, S. Speed, T.P., 2003. Resampling-based multiple testing microarray data analysis. Test, 12(1), pp.1-77. Blanchard, G., Neuvial, P., & Roquain, E. (2020). Post hoc confidence bounds false positives using reference families. Annals Statistics, 48(3), 1281-1303.","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/testByRandomization.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Randomization-based testing — testByRandomization","text":"","code":"m <- 23 rho <- 0.2 n <- 100 pi0 <- 0.5 B <- 1e3  ## two-sample data sim <- gaussianSamples(m, rho, n, pi0, SNR = 2, prob = 0.5) X <- sim$X categ <-sim$categ tests <- testByRandomization(X = X, categ = categ, B) testsW <- testByRandomization(X = X, categ = categ, B = 10, rowTestFUN = rowWilcoxonTests)  ## show test statistics pch <- 20 colStat <- 1+sim$H plot(tests$T, col = colStat, main = \"T-Test statistics\", pch = pch) legend(\"topleft\", c(\"H0\", \"H1\"), pch=pch, col=1:2)   plot(testsW$T, col = colStat, main = \"Wilcoxon test statistics\", pch = pch) legend(\"topleft\", c(\"H0\", \"H1\"), pch=pch, col=1:2)   # one-sample data: sim <- gaussianSamples(m, rho, n, pi0, SNR=2) tests <- testByRandomization(X = sim$X, categ = sim$categ, B, alternative = \"two.sided\")  ## show test statistics pch <- 20 colStat <- 1+sim$H plot(tests$T, col = colStat, main = \"Test statistics\", pch = pch) legend(\"topleft\", c(\"H0\", \"H1\"), pch = pch, col = 1:2)   plot(-log10(tests$p), col = colStat, main = \"-log[10](p-value)\", pch = pch) legend(\"topleft\", c(\"H0\", \"H1\"), pch = pch, col = 1:2)"},{"path":"https://sanssouci-org.github.io/sanssouci/reference/volcanoPlot.html","id":null,"dir":"Reference","previous_headings":"","what":"Volcano plot — volcanoPlot","title":"Volcano plot — volcanoPlot","text":"Volcano plot","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/volcanoPlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Volcano plot — volcanoPlot","text":"","code":"volcanoPlot(x, ...)  # S3 method for SansSouci volcanoPlot(   x,   fold_changes = foldChanges(x),   p_values = pValues(x),   p = 1,   q = 1,   r = 0,   cex = c(0.2, 0.6),   col = c(\"#33333333\", \"#FF0000\", \"#FF666633\"),   pch = 19,   ylim = NULL,   ... )"},{"path":"https://sanssouci-org.github.io/sanssouci/reference/volcanoPlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Volcano plot — volcanoPlot","text":"x object class SansSouci ... arguments passed volcanoPlot.numeric fold_changes optional vector fold changes, length nHyp(object), use volcanoPlot x-axis. specified, p_values vector p-values, length nHyp(object), use volcanoPlot x-axis p numeric value, p-value threshold genes selected q numeric value, q-value (FDR-adjusted p-value) threshold genes selected r numeric value, absolute fold change genes selected cex numeric vector length 2, relative magnification factor unselected (cex[1]) unselected (cex[2]) genes. col vector length 3 pch integer single character string specifying plotting character, see par ylim numeric vector length 2, y limits plot","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/volcanoPlot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Volcano plot — volcanoPlot","text":"","code":"data(expr_ALL, package = \"sanssouci.data\") groups <- ifelse(colnames(expr_ALL)==\"NEG\", 0, 1) a <- SansSouci(Y = expr_ALL, groups = groups)  res <- fit(a, B = 100, alpha = 0.1) volcanoPlot(res, q = 0.2, r = 0.2, ylim = c(0, 4))"},{"path":"https://sanssouci-org.github.io/sanssouci/reference/volcanoPlot.numeric.html","id":null,"dir":"Reference","previous_headings":"","what":"Volcano plot — volcanoPlot.numeric","title":"Volcano plot — volcanoPlot.numeric","text":"Volcano plot differential expression studies","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/volcanoPlot.numeric.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Volcano plot — volcanoPlot.numeric","text":"","code":"# S3 method for numeric volcanoPlot(   x,   y,   pval,   thr,   p = 1,   q = 1,   r = 0,   cex = c(0.2, 0.6),   col = c(\"#33333333\", \"#FF0000\", \"#FF666633\"),   pch = 19,   ylim = NULL,   bounds = TRUE,   ... )"},{"path":"https://sanssouci-org.github.io/sanssouci/reference/volcanoPlot.numeric.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Volcano plot — volcanoPlot.numeric","text":"x vector fold changes (x axis volcano plot) y vector p-values (y axis volcano plot) pval vector p-values, length x, use estimate post-hoc bounds thr numeric vector length K, JER controlling family, used estimate post-hoc bounds p numeric value, p-value threshold genes selected q numeric value, q-value (FDR-adjusted p-value) threshold genes selected r numeric value, absolute fold change genes selected cex numeric vector length 2, relative magnification factor unselected (cex[1]) unselected (cex[2]) genes. col vector length 3 pch integer single character string specifying plotting character, see par ylim numeric vector length 2, \\(y\\) limits plot bounds boolean value: post hoc bounds displayed plot? Defaults TRUE ... used","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/volcanoPlot.numeric.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Volcano plot — volcanoPlot.numeric","text":"indices selected genes (returned invisibly)","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/volcanoPlot.numeric.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Volcano plot — volcanoPlot.numeric","text":"Welch T-test differential expression two categories defined categ applied gene using rowWelchTests function, also outputs \"fold change\" (mean difference log scale) two categories.","code":""},{"path":[]},{"path":"https://sanssouci-org.github.io/sanssouci/reference/zeta.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate the number of true null hypotheses among a set of p-values — zeta","title":"Estimate the number of true null hypotheses among a set of p-values — zeta","text":"upper bound number true null hypotheses region associated \\(p\\)-values pval computed confidence 1 - lambda. functions described can used method argument zetas.tree().","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/zeta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate the number of true null hypotheses among a set of p-values — zeta","text":"","code":"zeta.HB(pval, lambda)  zeta.trivial(pval, lambda)  zeta.DKWM(pval, lambda)"},{"path":"https://sanssouci-org.github.io/sanssouci/reference/zeta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate the number of true null hypotheses among a set of p-values — zeta","text":"pval vector \\(p\\)-values lambda numeric value \\([0,1]\\), target error level test","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/zeta.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate the number of true null hypotheses among a set of p-values — zeta","text":"number true nulls -estimated follows: zeta.DKWM Inversion Dvoretzky-Kiefer-Wolfowitz-Massart inequality (related Storey estimator proportion true nulls) parameter lambda zeta.HB Number conserved hypotheses Holm-Bonferroni procedure parameter lambda zeta.trivial size p-value set trivial upper bound (\\(lambda\\) used)","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/zeta.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Estimate the number of true null hypotheses among a set of p-values — zeta","text":"Durand, G., Blanchard, G., Neuvial, P., & Roquain, E. (2020). Post hoc false positive control structured hypotheses. Scandinavian Journal Statistics, 47(4), 1114-1148. Dvoretzky, ., Kiefer, J., Wolfowitz, J. (1956). Asymptotic minimax character sample distribution function classical multinomial estimator. Annals Mathematical Statistics, pages 642-669. Holm, S. simple sequentially rejective multiple test procedure. Scandinavian Journal Statistics 6 (1979), pp. 65-70. Massart, P. (1990). tight constant Dvoretzky-Kiefer-Wolfowitz inequality. Annals Probability, pages 1269-1283. Storey, J. D. (2002). direct approach false discovery rates. Journal Royal Statistical Society: Series B (Statistical Methodology), 64(3):479-498.","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/zeta.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate the number of true null hypotheses among a set of p-values — zeta","text":"","code":"x <- rnorm(100, mean = c(rep(c(0, 2), each = 50))) pval <- 1 - pnorm(x) lambda <- 0.05 zeta.trivial(pval, lambda) #> [1] 100  zeta.HB(pval, lambda) #> [1] 94  zeta.DKWM(pval, lambda) #> [1] 68"},{"path":"https://sanssouci-org.github.io/sanssouci/reference/zetas.tree.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate of the proportion of true nulls in each node of a tree — zetas.tree","title":"Estimate of the proportion of true nulls in each node of a tree — zetas.tree","text":"Takes forest structure input, given couple C, leaf_list returns corresponding \\(\\zeta_k\\)'s according method(s) chosen.","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/zetas.tree.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate of the proportion of true nulls in each node of a tree — zetas.tree","text":"","code":"zetas.tree(   C,   leaf_list,   method,   pvalues,   alpha,   refine = FALSE,   verbose = FALSE )"},{"path":"https://sanssouci-org.github.io/sanssouci/reference/zetas.tree.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate of the proportion of true nulls in each node of a tree — zetas.tree","text":"C list list representing forest structure. See V.star() information. leaf_list list vectors representing atoms forest structure. See V.star() information. method function arguments (pval, lambda) can compute upper bound false positives region associated \\(p\\)-values pval confidence level 1 - lambda. can also list functions, h-th function used depth h tree structure, \\(R_k\\)'s represented elements found C[[h]]. Finally, can also list lists functions, mimicking structure C , , method[[h]][[j]] applied \\(R_k\\) represented C[[h]][[j]]. pvalues vector \\(p\\)-values, must size m, m highest element found vectors leaf_list. alpha target error level \\(]0,1[]\\). refine boolean, FALSE default. Whether use step-refinement try produce smaller \\(\\zeta_k\\)'s, see Details. verbose boolean, FALSE default. Whether print information (possibly multiple) round(s) step-refinement.","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/zetas.tree.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate of the proportion of true nulls in each node of a tree — zetas.tree","text":"ZL: list integer vectors representing upper bounds \\(\\zeta_k\\) forest structure. See V.star() information.","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/zetas.tree.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Estimate of the proportion of true nulls in each node of a tree — zetas.tree","text":"proportion true nulls node estimated union bound regions. , provided method(s) /applied level \\(\\frac{\\alpha}{K}\\) \\(K\\) number regions. step-refinement, find \\(R_k\\) associated \\(\\zeta_k=0\\), , think region contains false null hypotheses, can remove run \\(\\zeta_k\\)'s computation using \\(K-1\\) instead \\(K\\) union bound, reduce \"effective\" number regions.","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/zetas.tree.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Estimate of the proportion of true nulls in each node of a tree — zetas.tree","text":"Durand, G., Blanchard, G., Neuvial, P., & Roquain, E. (2020). Post hoc false positive control structured hypotheses. Scandinavian Journal Statistics, 47(4), 1114-1148. Durand, G. (2018). Multiple testing post hoc bounds heterogeneous data. PhD thesis, see Appendix B.2 step-refinement.","code":""},{"path":"https://sanssouci-org.github.io/sanssouci/reference/zetas.tree.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate of the proportion of true nulls in each node of a tree — zetas.tree","text":"","code":"m <- 1000 dd <- dyadic.from.window.size(m, s = 10, method = 2) leaf_list <- dd$leaf_list pvalues <- runif(m) C <- dd$C method <- zeta.trivial ZL <- zetas.tree(C, leaf_list, method, pvalues, alpha = 0.05) ZL #> [[1]] #> [1] 1000 #>  #> [[2]] #> [1] 500 500 #>  #> [[3]] #> [1] 250 250 250 250 #>  #> [[4]] #> [1] 130 120 130 120 130 120 130 120 #>  #> [[5]] #>  [1] 70 60 60 60 70 60 60 60 70 60 60 60 70 60 60 60 #>  #> [[6]] #>  [1] 40 30 30 30 30 30 30 30 40 30 30 30 30 30 30 30 40 30 30 30 30 30 30 30 40 #> [26] 30 30 30 30 30 30 30 #>  #> [[7]] #>  [1] 20 20 20 10 20 10 20 10 20 10 20 10 20 10 20 10 20 20 20 10 20 10 20 10 20 #> [26] 10 20 10 20 10 20 10 20 20 20 10 20 10 20 10 20 10 20 10 20 10 20 10 20 20 #> [51] 20 10 20 10 20 10 20 10 20 10 20 10 20 10 #>  #> [[8]] #>   [1] 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 #>  [26] 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 #>  [51] 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 #>  [76] 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 #>"}]
