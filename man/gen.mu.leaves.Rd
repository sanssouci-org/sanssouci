% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tree-simulation-functions.R
\name{gen.mu.leaves}
\alias{gen.mu.leaves}
\title{Generate the signal in the leaves of the tree}
\usage{
gen.mu.leaves(m, K1, d, grouped, setting, barmu, leaf_list)
}
\arguments{
\item{m}{An integer value, the number of hypotheses}

\item{K1}{An integer value, the number of non-null leaves}

\item{d}{A numeric value in \eqn{[0,1]}, the proportion of non-null signals in each non-null leaf}

\item{grouped}{A boolean value, whether the non-null leaves are contiguous or not}

\item{setting}{A character value specifying the shape of the signal in each non-null leaf}

\item{barmu}{A numeric value, the strength of the signal}

\item{leaf_list}{A list of leaves as generated by \code{dyadic.from.Nnn} functions}
}
\value{
A numeric vector of length \code{m}, the signal values for each hypothesis
}
\description{
Generate the signal in the leaves of the tree
}
\details{
If \code{setting == "const"} the non-null signal is constant equal to \code{barmu}. If \code{setting == "gauss"} and \eqn{d=1} the signal in an active leaf has the shape of a Gaussian bell with mean \code{barmu}, see the \code{\link{gauss_bloc}} function which generates it. If \eqn{d<1} it has the same shape but randomly pruned. If \code{setting == "poisson"} the non-null signal is randomly drawn according to a Poisson distribution of mean \code{barmu} (slightly modified to not yield 0). If \code{setting == "rgauss"} the non-null signal is randomly drawn according to a Normal distribution of mean \code{barmu} and variance \code{barmu}.
}
\examples{
m <- 160
s <- 10
K1 <- floor(m/(s * 4))
d <- 1
barmu <- 4
dd <- dyadic.from.window.size(m, s, method = 2)
leaf_list <- dd$leaf_list
muC <- gen.mu.leaves(m = m, K1 = K1, d = d, grouped = FALSE, 
                    setting = "const", barmu = barmu, leaf_list =leaf_list)
muC <- gen.mu.leaves(m = m, K1 = K1, d = d, grouped = TRUE, 
                    setting = "const", barmu = barmu, leaf_list =leaf_list)
muG <- gen.mu.leaves(m = m, K1 = K1, d = d, grouped = FALSE, 
                    setting = "gauss", barmu = barmu, leaf_list =leaf_list)
muP <- gen.mu.leaves(m = m, K1 = K1, d = d, grouped = FALSE, 
                    setting = "poisson", barmu = barmu, leaf_list =leaf_list)
mu <- cbind(constant = muC, Gaussian = muG, Poisson = muP)
matplot(mu, t = 's')
}
\seealso{
\code{\link{gauss_bloc}}
}
